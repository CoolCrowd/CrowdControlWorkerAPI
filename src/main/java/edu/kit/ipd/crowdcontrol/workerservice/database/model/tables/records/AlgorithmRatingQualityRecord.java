/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmRatingQuality;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlgorithmRatingQualityRecord extends UpdatableRecordImpl<AlgorithmRatingQualityRecord> implements Record2<String, String> {

	private static final long serialVersionUID = 1616639758;

	/**
	 * Setter for <code>crowdcontrol.Algorithm_Rating_Quality.id_Algorithm_Rating_Quality</code>.
	 */
	public void setIdAlgorithmRatingQuality(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Algorithm_Rating_Quality.id_Algorithm_Rating_Quality</code>.
	 */
	public String getIdAlgorithmRatingQuality() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrol.Algorithm_Rating_Quality.description</code>.
	 */
	public void setDescription(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Algorithm_Rating_Quality.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return AlgorithmRatingQuality.ALGORITHM_RATING_QUALITY.ID_ALGORITHM_RATING_QUALITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return AlgorithmRatingQuality.ALGORITHM_RATING_QUALITY.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getIdAlgorithmRatingQuality();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AlgorithmRatingQualityRecord value1(String value) {
		setIdAlgorithmRatingQuality(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AlgorithmRatingQualityRecord value2(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AlgorithmRatingQualityRecord values(String value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AlgorithmRatingQualityRecord
	 */
	public AlgorithmRatingQualityRecord() {
		super(AlgorithmRatingQuality.ALGORITHM_RATING_QUALITY);
	}

	/**
	 * Create a detached, initialised AlgorithmRatingQualityRecord
	 */
	public AlgorithmRatingQualityRecord(String idAlgorithmRatingQuality, String description) {
		super(AlgorithmRatingQuality.ALGORITHM_RATING_QUALITY);

		setValue(0, idAlgorithmRatingQuality);
		setValue(1, description);
	}
}
