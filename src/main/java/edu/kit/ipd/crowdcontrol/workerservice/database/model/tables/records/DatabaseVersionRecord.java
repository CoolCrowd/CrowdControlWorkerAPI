/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.DatabaseVersion;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatabaseVersionRecord extends UpdatableRecordImpl<DatabaseVersionRecord> implements Record3<Integer, Integer, Timestamp> {

	private static final long serialVersionUID = -1011688788;

	/**
	 * Setter for <code>crowdcontrol.Database_Version.idDatabase_Version</code>.
	 */
	public void setIddatabaseVersion(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Database_Version.idDatabase_Version</code>.
	 */
	public Integer getIddatabaseVersion() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrol.Database_Version.version</code>.
	 */
	public void setVersion(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Database_Version.version</code>.
	 */
	public Integer getVersion() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrol.Database_Version.timestamp</code>.
	 */
	public void setTimestamp(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Database_Version.timestamp</code>.
	 */
	public Timestamp getTimestamp() {
		return (Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Timestamp> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Timestamp> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return DatabaseVersion.DATABASE_VERSION.IDDATABASE_VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return DatabaseVersion.DATABASE_VERSION.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return DatabaseVersion.DATABASE_VERSION.TIMESTAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIddatabaseVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getTimestamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DatabaseVersionRecord value1(Integer value) {
		setIddatabaseVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DatabaseVersionRecord value2(Integer value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DatabaseVersionRecord value3(Timestamp value) {
		setTimestamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DatabaseVersionRecord values(Integer value1, Integer value2, Timestamp value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DatabaseVersionRecord
	 */
	public DatabaseVersionRecord() {
		super(DatabaseVersion.DATABASE_VERSION);
	}

	/**
	 * Create a detached, initialised DatabaseVersionRecord
	 */
	public DatabaseVersionRecord(Integer iddatabaseVersion, Integer version, Timestamp timestamp) {
		super(DatabaseVersion.DATABASE_VERSION);

		setValue(0, iddatabaseVersion);
		setValue(1, version);
		setValue(2, timestamp);
	}
}
