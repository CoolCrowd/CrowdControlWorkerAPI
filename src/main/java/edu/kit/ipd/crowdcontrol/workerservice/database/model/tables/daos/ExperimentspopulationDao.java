/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.daos;

import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.pojos.Experimentspopulation;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentspopulationRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperimentspopulationDao extends org.jooq.impl.DAOImpl<ExperimentspopulationRecord, Experimentspopulation, java.lang.String> {

	/**
	 * Create a new ExperimentspopulationDao without any configuration
	 */
	public ExperimentspopulationDao() {
		super(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experimentspopulation.EXPERIMENTSPOPULATION, Experimentspopulation.class);
	}

	/**
	 * Create a new ExperimentspopulationDao with an attached configuration
	 */
	public ExperimentspopulationDao(org.jooq.Configuration configuration) {
		super(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experimentspopulation.EXPERIMENTSPOPULATION, Experimentspopulation.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.String getId(Experimentspopulation object) {
		return object.getIdexperimentspopulation();
	}

	/**
	 * Fetch records that have <code>idExperimentsPopulation IN (values)</code>
	 */
	public java.util.List<Experimentspopulation> fetchByIdexperimentspopulation(java.lang.String... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experimentspopulation.EXPERIMENTSPOPULATION.IDEXPERIMENTSPOPULATION, values);
	}

	/**
	 * Fetch a unique record that has <code>idExperimentsPopulation = value</code>
	 */
	public Experimentspopulation fetchOneByIdexperimentspopulation(java.lang.String value) {
		return fetchOne(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experimentspopulation.EXPERIMENTSPOPULATION.IDEXPERIMENTSPOPULATION, value);
	}

	/**
	 * Fetch records that have <code>population_user IN (values)</code>
	 */
	public java.util.List<Experimentspopulation> fetchByPopulationUser(java.lang.Integer... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experimentspopulation.EXPERIMENTSPOPULATION.POPULATION_USER, values);
	}

	/**
	 * Fetch records that have <code>answer IN (values)</code>
	 */
	public java.util.List<Experimentspopulation> fetchByAnswer(java.lang.Integer... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experimentspopulation.EXPERIMENTSPOPULATION.ANSWER, values);
	}

	/**
	 * Fetch records that have <code>referenced_platform IN (values)</code>
	 */
	public java.util.List<Experimentspopulation> fetchByReferencedPlatform(java.lang.String... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experimentspopulation.EXPERIMENTSPOPULATION.REFERENCED_PLATFORM, values);
	}

	/**
	 * Fetch records that have <code>not IN (values)</code>
	 */
	public java.util.List<Experimentspopulation> fetchByNot(java.lang.Boolean... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experimentspopulation.EXPERIMENTSPOPULATION.NOT, values);
	}
}
