/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalibrationAnswerOption extends TableImpl<CalibrationAnswerOptionRecord> {

	private static final long serialVersionUID = 267380842;

	/**
	 * The reference instance of <code>crowdcontrol.Calibration_answer_option</code>
	 */
	public static final CalibrationAnswerOption CALIBRATION_ANSWER_OPTION = new CalibrationAnswerOption();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CalibrationAnswerOptionRecord> getRecordType() {
		return CalibrationAnswerOptionRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Calibration_answer_option.id_calibration_answer_option</code>.
	 */
	public final TableField<CalibrationAnswerOptionRecord, Integer> ID_CALIBRATION_ANSWER_OPTION = createField("id_calibration_answer_option", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Calibration_answer_option.calibration</code>.
	 */
	public final TableField<CalibrationAnswerOptionRecord, Integer> CALIBRATION = createField("calibration", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Calibration_answer_option.answer</code>.
	 */
	public final TableField<CalibrationAnswerOptionRecord, String> ANSWER = createField("answer", org.jooq.impl.SQLDataType.VARCHAR.length(191).nullable(false), this, "");

	/**
	 * Create a <code>crowdcontrol.Calibration_answer_option</code> table reference
	 */
	public CalibrationAnswerOption() {
		this("Calibration_answer_option", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Calibration_answer_option</code> table reference
	 */
	public CalibrationAnswerOption(String alias) {
		this(alias, CALIBRATION_ANSWER_OPTION);
	}

	private CalibrationAnswerOption(String alias, Table<CalibrationAnswerOptionRecord> aliased) {
		this(alias, aliased, null);
	}

	private CalibrationAnswerOption(String alias, Table<CalibrationAnswerOptionRecord> aliased, Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CalibrationAnswerOptionRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CALIBRATION_ANSWER_OPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CalibrationAnswerOptionRecord> getPrimaryKey() {
		return Keys.KEY_CALIBRATION_ANSWER_OPTION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CalibrationAnswerOptionRecord>> getKeys() {
		return Arrays.<UniqueKey<CalibrationAnswerOptionRecord>>asList(Keys.KEY_CALIBRATION_ANSWER_OPTION_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CalibrationAnswerOptionRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CalibrationAnswerOptionRecord, ?>>asList(Keys.CALIBRATIONANSWER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CalibrationAnswerOption as(String alias) {
		return new CalibrationAnswerOption(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CalibrationAnswerOption rename(String name) {
		return new CalibrationAnswerOption(name, null);
	}
}
