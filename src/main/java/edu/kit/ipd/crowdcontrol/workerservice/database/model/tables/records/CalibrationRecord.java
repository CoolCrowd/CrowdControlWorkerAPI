/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Calibration;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalibrationRecord extends UpdatableRecordImpl<CalibrationRecord> implements Record4<Integer, String, String, Integer> {

	private static final long serialVersionUID = 194714866;

	/**
	 * Setter for <code>crowdcontrol.Calibration.id_calibration</code>.
	 */
	public void setIdCalibration(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Calibration.id_calibration</code>.
	 */
	public Integer getIdCalibration() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrol.Calibration.property</code>.
	 */
	public void setProperty(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Calibration.property</code>.
	 */
	public String getProperty() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrol.Calibration.name</code>.
	 */
	public void setName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Calibration.name</code>.
	 */
	public String getName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>crowdcontrol.Calibration.experiment</code>.
	 */
	public void setExperiment(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Calibration.experiment</code>.
	 */
	public Integer getExperiment() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Calibration.CALIBRATION.ID_CALIBRATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Calibration.CALIBRATION.PROPERTY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Calibration.CALIBRATION.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Calibration.CALIBRATION.EXPERIMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdCalibration();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getProperty();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getExperiment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CalibrationRecord value1(Integer value) {
		setIdCalibration(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CalibrationRecord value2(String value) {
		setProperty(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CalibrationRecord value3(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CalibrationRecord value4(Integer value) {
		setExperiment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CalibrationRecord values(Integer value1, String value2, String value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CalibrationRecord
	 */
	public CalibrationRecord() {
		super(Calibration.CALIBRATION);
	}

	/**
	 * Create a detached, initialised CalibrationRecord
	 */
	public CalibrationRecord(Integer idCalibration, String property, String name, Integer experiment) {
		super(Calibration.CALIBRATION);

		setValue(0, idCalibration);
		setValue(1, property);
		setValue(2, name);
		setValue(3, experiment);
	}
}
