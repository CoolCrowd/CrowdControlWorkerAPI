/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.objectservice.database.model.tables;


import edu.kit.ipd.crowdcontrol.objectservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.objectservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.objectservice.database.model.enums.ExperimentsPlatformModeMode;
import edu.kit.ipd.crowdcontrol.objectservice.database.model.tables.records.ExperimentsPlatformModeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperimentsPlatformMode extends TableImpl<ExperimentsPlatformModeRecord> {

	private static final long serialVersionUID = 1343392218;

	/**
	 * The reference instance of <code>crowdcontrol.Experiments_Platform_Mode</code>
	 */
	public static final ExperimentsPlatformMode EXPERIMENTS_PLATFORM_MODE = new ExperimentsPlatformMode();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ExperimentsPlatformModeRecord> getRecordType() {
		return ExperimentsPlatformModeRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Experiments_Platform_Mode.idExperiments_Platform_Stopgap</code>.
	 */
	public final TableField<ExperimentsPlatformModeRecord, Integer> IDEXPERIMENTS_PLATFORM_STOPGAP = createField("idExperiments_Platform_Stopgap", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Experiments_Platform_Mode.experiments_platform</code>.
	 */
	public final TableField<ExperimentsPlatformModeRecord, Integer> EXPERIMENTS_PLATFORM = createField("experiments_platform", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Experiments_Platform_Mode.mode</code>.
	 */
	public final TableField<ExperimentsPlatformModeRecord, ExperimentsPlatformModeMode> MODE = createField("mode", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(edu.kit.ipd.crowdcontrol.objectservice.database.model.enums.ExperimentsPlatformModeMode.class), this, "");

	/**
	 * The column <code>crowdcontrol.Experiments_Platform_Mode.timestamp</code>.
	 */
	public final TableField<ExperimentsPlatformModeRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>crowdcontrol.Experiments_Platform_Mode</code> table reference
	 */
	public ExperimentsPlatformMode() {
		this("Experiments_Platform_Mode", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Experiments_Platform_Mode</code> table reference
	 */
	public ExperimentsPlatformMode(String alias) {
		this(alias, EXPERIMENTS_PLATFORM_MODE);
	}

	private ExperimentsPlatformMode(String alias, Table<ExperimentsPlatformModeRecord> aliased) {
		this(alias, aliased, null);
	}

	private ExperimentsPlatformMode(String alias, Table<ExperimentsPlatformModeRecord> aliased, Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ExperimentsPlatformModeRecord, Integer> getIdentity() {
		return Keys.IDENTITY_EXPERIMENTS_PLATFORM_MODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ExperimentsPlatformModeRecord> getPrimaryKey() {
		return Keys.KEY_EXPERIMENTS_PLATFORM_MODE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ExperimentsPlatformModeRecord>> getKeys() {
		return Arrays.<UniqueKey<ExperimentsPlatformModeRecord>>asList(Keys.KEY_EXPERIMENTS_PLATFORM_MODE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ExperimentsPlatformModeRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ExperimentsPlatformModeRecord, ?>>asList(Keys.MODE_FOR_PLATFORM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentsPlatformMode as(String alias) {
		return new ExperimentsPlatformMode(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ExperimentsPlatformMode rename(String name) {
		return new ExperimentsPlatformMode(name, null);
	}
}
