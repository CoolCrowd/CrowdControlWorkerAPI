/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingReservation;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RatingReservationRecord extends UpdatableRecordImpl<RatingReservationRecord> implements Record6<Integer, Integer, Integer, Integer, Timestamp, Boolean> {

	private static final long serialVersionUID = 1480720532;

	/**
	 * Setter for <code>crowdcontrol.Rating_Reservation.id_reserverd_Rating</code>.
	 */
	public void setIdReserverdRating(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating_Reservation.id_reserverd_Rating</code>.
	 */
	public Integer getIdReserverdRating() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating_Reservation.worker</code>.
	 */
	public void setWorker(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating_Reservation.worker</code>.
	 */
	public Integer getWorker() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating_Reservation.experiment</code>.
	 */
	public void setExperiment(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating_Reservation.experiment</code>.
	 */
	public Integer getExperiment() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating_Reservation.answer</code>.
	 */
	public void setAnswer(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating_Reservation.answer</code>.
	 */
	public Integer getAnswer() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating_Reservation.timestamp</code>.
	 */
	public void setTimestamp(Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating_Reservation.timestamp</code>.
	 */
	public Timestamp getTimestamp() {
		return (Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating_Reservation.used</code>.
	 */
	public void setUsed(Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating_Reservation.used</code>.
	 */
	public Boolean getUsed() {
		return (Boolean) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, Integer, Integer, Integer, Timestamp, Boolean> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, Integer, Integer, Integer, Timestamp, Boolean> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return RatingReservation.RATING_RESERVATION.ID_RESERVERD_RATING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return RatingReservation.RATING_RESERVATION.WORKER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return RatingReservation.RATING_RESERVATION.EXPERIMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return RatingReservation.RATING_RESERVATION.ANSWER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return RatingReservation.RATING_RESERVATION.TIMESTAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return RatingReservation.RATING_RESERVATION.USED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdReserverdRating();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getWorker();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getExperiment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getAnswer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getTimestamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getUsed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingReservationRecord value1(Integer value) {
		setIdReserverdRating(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingReservationRecord value2(Integer value) {
		setWorker(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingReservationRecord value3(Integer value) {
		setExperiment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingReservationRecord value4(Integer value) {
		setAnswer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingReservationRecord value5(Timestamp value) {
		setTimestamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingReservationRecord value6(Boolean value) {
		setUsed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingReservationRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Timestamp value5, Boolean value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RatingReservationRecord
	 */
	public RatingReservationRecord() {
		super(RatingReservation.RATING_RESERVATION);
	}

	/**
	 * Create a detached, initialised RatingReservationRecord
	 */
	public RatingReservationRecord(Integer idReserverdRating, Integer worker, Integer experiment, Integer answer, Timestamp timestamp, Boolean used) {
		super(RatingReservation.RATING_RESERVATION);

		setValue(0, idReserverdRating);
		setValue(1, worker);
		setValue(2, experiment);
		setValue(3, answer);
		setValue(4, timestamp);
		setValue(5, used);
	}
}
