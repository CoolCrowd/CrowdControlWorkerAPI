/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.enums.WorkerBalanceType;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerBalanceRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkerBalance extends TableImpl<WorkerBalanceRecord> {

	private static final long serialVersionUID = 1633080375;

	/**
	 * The reference instance of <code>crowdcontrol.Worker_Balance</code>
	 */
	public static final WorkerBalance WORKER_BALANCE = new WorkerBalance();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<WorkerBalanceRecord> getRecordType() {
		return WorkerBalanceRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Worker_Balance.id_worker_balance</code>.
	 */
	public final TableField<WorkerBalanceRecord, Integer> ID_WORKER_BALANCE = createField("id_worker_balance", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Worker_Balance.transaction_value</code>.
	 */
	public final TableField<WorkerBalanceRecord, Integer> TRANSACTION_VALUE = createField("transaction_value", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Worker_Balance.worker</code>.
	 */
	public final TableField<WorkerBalanceRecord, Integer> WORKER = createField("worker", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Worker_Balance.experiment</code>.
	 */
	public final TableField<WorkerBalanceRecord, Integer> EXPERIMENT = createField("experiment", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>crowdcontrol.Worker_Balance.gift_code</code>.
	 */
	public final TableField<WorkerBalanceRecord, Integer> GIFT_CODE = createField("gift_code", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>crowdcontrol.Worker_Balance.type</code>.
	 */
	public final TableField<WorkerBalanceRecord, WorkerBalanceType> TYPE = createField("type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(edu.kit.ipd.crowdcontrol.workerservice.database.model.enums.WorkerBalanceType.class), this, "");

	/**
	 * The column <code>crowdcontrol.Worker_Balance.timestamp</code>.
	 */
	public final TableField<WorkerBalanceRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>crowdcontrol.Worker_Balance</code> table reference
	 */
	public WorkerBalance() {
		this("Worker_Balance", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Worker_Balance</code> table reference
	 */
	public WorkerBalance(String alias) {
		this(alias, WORKER_BALANCE);
	}

	private WorkerBalance(String alias, Table<WorkerBalanceRecord> aliased) {
		this(alias, aliased, null);
	}

	private WorkerBalance(String alias, Table<WorkerBalanceRecord> aliased, Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<WorkerBalanceRecord, Integer> getIdentity() {
		return Keys.IDENTITY_WORKER_BALANCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<WorkerBalanceRecord> getPrimaryKey() {
		return Keys.KEY_WORKER_BALANCE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<WorkerBalanceRecord>> getKeys() {
		return Arrays.<UniqueKey<WorkerBalanceRecord>>asList(Keys.KEY_WORKER_BALANCE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<WorkerBalanceRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<WorkerBalanceRecord, ?>>asList(Keys.TRANSACTION_PARTNER, Keys.USED_GIFT_CODE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkerBalance as(String alias) {
		return new WorkerBalance(alias, this);
	}

	/**
	 * Rename this table
	 */
	public WorkerBalance rename(String name) {
		return new WorkerBalance(name, null);
	}
}
