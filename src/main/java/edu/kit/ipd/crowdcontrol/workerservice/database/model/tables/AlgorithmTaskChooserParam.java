/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserParamRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlgorithmTaskChooserParam extends TableImpl<AlgorithmTaskChooserParamRecord> {

	private static final long serialVersionUID = 217647999;

	/**
	 * The reference instance of <code>crowdcontrol.Algorithm_Task_Chooser_Param</code>
	 */
	public static final AlgorithmTaskChooserParam ALGORITHM_TASK_CHOOSER_PARAM = new AlgorithmTaskChooserParam();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AlgorithmTaskChooserParamRecord> getRecordType() {
		return AlgorithmTaskChooserParamRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Algorithm_Task_Chooser_Param.id_Algorithm_Task_Chooser_Param</code>.
	 */
	public final TableField<AlgorithmTaskChooserParamRecord, Integer> ID_ALGORITHM_TASK_CHOOSER_PARAM = createField("id_Algorithm_Task_Chooser_Param", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Algorithm_Task_Chooser_Param.description</code>.
	 */
	public final TableField<AlgorithmTaskChooserParamRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Algorithm_Task_Chooser_Param.regex</code>.
	 */
	public final TableField<AlgorithmTaskChooserParamRecord, String> REGEX = createField("regex", org.jooq.impl.SQLDataType.VARCHAR.length(191).nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Algorithm_Task_Chooser_Param.algorithm</code>.
	 */
	public final TableField<AlgorithmTaskChooserParamRecord, String> ALGORITHM = createField("algorithm", org.jooq.impl.SQLDataType.VARCHAR.length(191).nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Algorithm_Task_Chooser_Param.data</code>.
	 */
	public final TableField<AlgorithmTaskChooserParamRecord, String> DATA = createField("data", org.jooq.impl.SQLDataType.VARCHAR.length(191), this, "");

	/**
	 * Create a <code>crowdcontrol.Algorithm_Task_Chooser_Param</code> table reference
	 */
	public AlgorithmTaskChooserParam() {
		this("Algorithm_Task_Chooser_Param", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Algorithm_Task_Chooser_Param</code> table reference
	 */
	public AlgorithmTaskChooserParam(String alias) {
		this(alias, ALGORITHM_TASK_CHOOSER_PARAM);
	}

	private AlgorithmTaskChooserParam(String alias, Table<AlgorithmTaskChooserParamRecord> aliased) {
		this(alias, aliased, null);
	}

	private AlgorithmTaskChooserParam(String alias, Table<AlgorithmTaskChooserParamRecord> aliased, Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AlgorithmTaskChooserParamRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ALGORITHM_TASK_CHOOSER_PARAM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AlgorithmTaskChooserParamRecord> getPrimaryKey() {
		return Keys.KEY_ALGORITHM_TASK_CHOOSER_PARAM_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AlgorithmTaskChooserParamRecord>> getKeys() {
		return Arrays.<UniqueKey<AlgorithmTaskChooserParamRecord>>asList(Keys.KEY_ALGORITHM_TASK_CHOOSER_PARAM_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<AlgorithmTaskChooserParamRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<AlgorithmTaskChooserParamRecord, ?>>asList(Keys.REFERENCEDTASKCHOOSER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AlgorithmTaskChooserParam as(String alias) {
		return new AlgorithmTaskChooserParam(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AlgorithmTaskChooserParam rename(String name) {
		return new AlgorithmTaskChooserParam(name, null);
	}
}
