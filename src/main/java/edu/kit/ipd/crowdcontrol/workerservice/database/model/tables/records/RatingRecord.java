/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RatingRecord extends UpdatableRecordImpl<RatingRecord> implements Record9<Integer, Integer, Integer, Timestamp, Integer, Integer, String, Integer, Integer> {

	private static final long serialVersionUID = 1645104049;

	/**
	 * Setter for <code>crowdcontrol.Rating.id_rating</code>.
	 */
	public void setIdRating(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating.id_rating</code>.
	 */
	public Integer getIdRating() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating.experiment</code>.
	 */
	public void setExperiment(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating.experiment</code>.
	 */
	public Integer getExperiment() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating.answer_r</code>.
	 */
	public void setAnswerR(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating.answer_r</code>.
	 */
	public Integer getAnswerR() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating.timestamp</code>.
	 */
	public void setTimestamp(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating.timestamp</code>.
	 */
	public Timestamp getTimestamp() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating.rating</code>.
	 */
	public void setRating(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating.rating</code>.
	 */
	public Integer getRating() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating.reservation</code>.
	 */
	public void setReservation(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating.reservation</code>.
	 */
	public Integer getReservation() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating.feedback</code>.
	 */
	public void setFeedback(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating.feedback</code>.
	 */
	public String getFeedback() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating.worker_id</code>.
	 */
	public void setWorkerId(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating.worker_id</code>.
	 */
	public Integer getWorkerId() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>crowdcontrol.Rating.quality</code>.
	 */
	public void setQuality(Integer value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Rating.quality</code>.
	 */
	public Integer getQuality() {
		return (Integer) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, Integer, Integer, Timestamp, Integer, Integer, String, Integer, Integer> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Integer, Integer, Integer, Timestamp, Integer, Integer, String, Integer, Integer> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Rating.RATING.ID_RATING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Rating.RATING.EXPERIMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Rating.RATING.ANSWER_R;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return Rating.RATING.TIMESTAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Rating.RATING.RATING_;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Rating.RATING.RESERVATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Rating.RATING.FEEDBACK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return Rating.RATING.WORKER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field9() {
		return Rating.RATING.QUALITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdRating();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getExperiment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getAnswerR();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getTimestamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getRating();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getReservation();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getFeedback();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getWorkerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value9() {
		return getQuality();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingRecord value1(Integer value) {
		setIdRating(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingRecord value2(Integer value) {
		setExperiment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingRecord value3(Integer value) {
		setAnswerR(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingRecord value4(Timestamp value) {
		setTimestamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingRecord value5(Integer value) {
		setRating(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingRecord value6(Integer value) {
		setReservation(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingRecord value7(String value) {
		setFeedback(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingRecord value8(Integer value) {
		setWorkerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingRecord value9(Integer value) {
		setQuality(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RatingRecord values(Integer value1, Integer value2, Integer value3, Timestamp value4, Integer value5, Integer value6, String value7, Integer value8, Integer value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RatingRecord
	 */
	public RatingRecord() {
		super(Rating.RATING);
	}

	/**
	 * Create a detached, initialised RatingRecord
	 */
	public RatingRecord(Integer idRating, Integer experiment, Integer answerR, Timestamp timestamp, Integer rating, Integer reservation, String feedback, Integer workerId, Integer quality) {
		super(Rating.RATING);

		setValue(0, idRating);
		setValue(1, experiment);
		setValue(2, answerR);
		setValue(3, timestamp);
		setValue(4, rating);
		setValue(5, reservation);
		setValue(6, feedback);
		setValue(7, workerId);
		setValue(8, quality);
	}
}
