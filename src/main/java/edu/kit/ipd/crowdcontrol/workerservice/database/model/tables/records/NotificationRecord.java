/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.objectservice.database.model.tables.records;


import edu.kit.ipd.crowdcontrol.objectservice.database.model.tables.Notification;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationRecord extends UpdatableRecordImpl<NotificationRecord> implements Record6<Integer, String, String, Integer, String, Boolean> {

	private static final long serialVersionUID = 761228986;

	/**
	 * Setter for <code>crowdcontrol.Notification.id_notification</code>.
	 */
	public void setIdNotification(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Notification.id_notification</code>.
	 */
	public Integer getIdNotification() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrol.Notification.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Notification.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrol.Notification.description</code>.
	 */
	public void setDescription(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Notification.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>crowdcontrol.Notification.checkPeriod</code>.
	 */
	public void setCheckperiod(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Notification.checkPeriod</code>.
	 */
	public Integer getCheckperiod() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>crowdcontrol.Notification.query</code>.
	 */
	public void setQuery(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Notification.query</code>.
	 */
	public String getQuery() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>crowdcontrol.Notification.send_once</code>.
	 */
	public void setSendOnce(Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Notification.send_once</code>.
	 */
	public Boolean getSendOnce() {
		return (Boolean) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, String, Integer, String, Boolean> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, String, Integer, String, Boolean> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Notification.NOTIFICATION.ID_NOTIFICATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Notification.NOTIFICATION.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Notification.NOTIFICATION.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Notification.NOTIFICATION.CHECKPERIOD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Notification.NOTIFICATION.QUERY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return Notification.NOTIFICATION.SEND_ONCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdNotification();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getCheckperiod();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getQuery();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getSendOnce();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotificationRecord value1(Integer value) {
		setIdNotification(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotificationRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotificationRecord value3(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotificationRecord value4(Integer value) {
		setCheckperiod(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotificationRecord value5(String value) {
		setQuery(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotificationRecord value6(Boolean value) {
		setSendOnce(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotificationRecord values(Integer value1, String value2, String value3, Integer value4, String value5, Boolean value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached NotificationRecord
	 */
	public NotificationRecord() {
		super(Notification.NOTIFICATION);
	}

	/**
	 * Create a detached, initialised NotificationRecord
	 */
	public NotificationRecord(Integer idNotification, String name, String description, Integer checkperiod, String query, Boolean sendOnce) {
		super(Notification.NOTIFICATION);

		setValue(0, idNotification);
		setValue(1, name);
		setValue(2, description);
		setValue(3, checkperiod);
		setValue(4, query);
		setValue(5, sendOnce);
	}
}
