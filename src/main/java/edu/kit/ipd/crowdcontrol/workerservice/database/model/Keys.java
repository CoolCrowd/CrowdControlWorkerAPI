/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the <code>crowdcontrol</code> 
 * schema
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityParamRecord, java.lang.Integer> IDENTITY_ALGORITHM_ANSWER_QUALITY_PARAM = Identities0.IDENTITY_ALGORITHM_ANSWER_QUALITY_PARAM;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityParamRecord, java.lang.Integer> IDENTITY_ALGORITHM_RATING_QUALITY_PARAM = Identities0.IDENTITY_ALGORITHM_RATING_QUALITY_PARAM;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserParamRecord, java.lang.Integer> IDENTITY_ALGORITHM_TASK_CHOOSER_PARAM = Identities0.IDENTITY_ALGORITHM_TASK_CHOOSER_PARAM;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AnswerRecord, java.lang.Integer> IDENTITY_ANSWER = Identities0.IDENTITY_ANSWER;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord, java.lang.Integer> IDENTITY_CALIBRATION = Identities0.IDENTITY_CALIBRATION;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord, java.lang.Integer> IDENTITY_CALIBRATION_ANSWER_OPTION = Identities0.IDENTITY_CALIBRATION_ANSWER_OPTION;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationResultRecord, java.lang.Integer> IDENTITY_CALIBRATION_RESULT = Identities0.IDENTITY_CALIBRATION_RESULT;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenAnswerQualityParamRecord, java.lang.Integer> IDENTITY_CHOSEN_ANSWER_QUALITY_PARAM = Identities0.IDENTITY_CHOSEN_ANSWER_QUALITY_PARAM;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenRatingQualityParamRecord, java.lang.Integer> IDENTITY_CHOSEN_RATING_QUALITY_PARAM = Identities0.IDENTITY_CHOSEN_RATING_QUALITY_PARAM;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenTaskChooserParamRecord, java.lang.Integer> IDENTITY_CHOSEN_TASK_CHOOSER_PARAM = Identities0.IDENTITY_CHOSEN_TASK_CHOOSER_PARAM;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ConstraintRecord, java.lang.Integer> IDENTITY_CONSTRAINT = Identities0.IDENTITY_CONSTRAINT;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord, java.lang.Integer> IDENTITY_EXPERIMENT = Identities0.IDENTITY_EXPERIMENT;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsCalibrationRecord, java.lang.Integer> IDENTITY_EXPERIMENTS_CALIBRATION = Identities0.IDENTITY_EXPERIMENTS_CALIBRATION;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord, java.lang.Integer> IDENTITY_EXPERIMENTS_PLATFORM = Identities0.IDENTITY_EXPERIMENTS_PLATFORM;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.GiftCodeRecord, java.lang.Integer> IDENTITY_GIFT_CODE = Identities0.IDENTITY_GIFT_CODE;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationRecord, java.lang.Integer> IDENTITY_NOTIFICATION = Identities0.IDENTITY_NOTIFICATION;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationReceiverEmailRecord, java.lang.Integer> IDENTITY_NOTIFICATION_RECEIVER_EMAIL = Identities0.IDENTITY_NOTIFICATION_RECEIVER_EMAIL;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationTokenRecord, java.lang.Integer> IDENTITY_NOTIFICATION_TOKEN = Identities0.IDENTITY_NOTIFICATION_TOKEN;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord, java.lang.Integer> IDENTITY_RATING = Identities0.IDENTITY_RATING;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingConstraintRecord, java.lang.Integer> IDENTITY_RATING_CONSTRAINT = Identities0.IDENTITY_RATING_CONSTRAINT;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionExperimentRecord, java.lang.Integer> IDENTITY_RATING_OPTION_EXPERIMENT = Identities0.IDENTITY_RATING_OPTION_EXPERIMENT;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionTemplateRecord, java.lang.Integer> IDENTITY_RATING_OPTION_TEMPLATE = Identities0.IDENTITY_RATING_OPTION_TEMPLATE;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TagRecord, java.lang.Integer> IDENTITY_TAG = Identities0.IDENTITY_TAG;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord, java.lang.Integer> IDENTITY_TEMPLATE = Identities0.IDENTITY_TEMPLATE;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateConstraintRecord, java.lang.Integer> IDENTITY_TEMPLATE_CONSTRAINT = Identities0.IDENTITY_TEMPLATE_CONSTRAINT;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateTagRecord, java.lang.Integer> IDENTITY_TEMPLATE_TAG = Identities0.IDENTITY_TEMPLATE_TAG;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord, java.lang.Integer> IDENTITY_WORKER = Identities0.IDENTITY_WORKER;
	public static final org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerBalanceRecord, java.lang.Integer> IDENTITY_WORKER_BALANCE = Identities0.IDENTITY_WORKER_BALANCE;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityRecord> KEY_ALGORITHM_ANSWER_QUALITY_PRIMARY = UniqueKeys0.KEY_ALGORITHM_ANSWER_QUALITY_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityParamRecord> KEY_ALGORITHM_ANSWER_QUALITY_PARAM_PRIMARY = UniqueKeys0.KEY_ALGORITHM_ANSWER_QUALITY_PARAM_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityRecord> KEY_ALGORITHM_RATING_QUALITY_PRIMARY = UniqueKeys0.KEY_ALGORITHM_RATING_QUALITY_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityParamRecord> KEY_ALGORITHM_RATING_QUALITY_PARAM_PRIMARY = UniqueKeys0.KEY_ALGORITHM_RATING_QUALITY_PARAM_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserRecord> KEY_ALGORITHM_TASK_CHOOSER_PRIMARY = UniqueKeys0.KEY_ALGORITHM_TASK_CHOOSER_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserParamRecord> KEY_ALGORITHM_TASK_CHOOSER_PARAM_PRIMARY = UniqueKeys0.KEY_ALGORITHM_TASK_CHOOSER_PARAM_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AnswerRecord> KEY_ANSWER_PRIMARY = UniqueKeys0.KEY_ANSWER_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord> KEY_CALIBRATION_PRIMARY = UniqueKeys0.KEY_CALIBRATION_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord> KEY_CALIBRATION_EXPERIMENT_UNIQUE = UniqueKeys0.KEY_CALIBRATION_EXPERIMENT_UNIQUE;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord> KEY_CALIBRATION_ANSWER_OPTION_PRIMARY = UniqueKeys0.KEY_CALIBRATION_ANSWER_OPTION_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationResultRecord> KEY_CALIBRATION_RESULT_PRIMARY = UniqueKeys0.KEY_CALIBRATION_RESULT_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenAnswerQualityParamRecord> KEY_CHOSEN_ANSWER_QUALITY_PARAM_PRIMARY = UniqueKeys0.KEY_CHOSEN_ANSWER_QUALITY_PARAM_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenRatingQualityParamRecord> KEY_CHOSEN_RATING_QUALITY_PARAM_PRIMARY = UniqueKeys0.KEY_CHOSEN_RATING_QUALITY_PARAM_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenTaskChooserParamRecord> KEY_CHOSEN_TASK_CHOOSER_PARAM_PRIMARY = UniqueKeys0.KEY_CHOSEN_TASK_CHOOSER_PARAM_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ConstraintRecord> KEY_CONSTRAINT_PRIMARY = UniqueKeys0.KEY_CONSTRAINT_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.DatabaseVersionRecord> KEY_DATABASE_VERSION_PRIMARY = UniqueKeys0.KEY_DATABASE_VERSION_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> KEY_EXPERIMENT_PRIMARY = UniqueKeys0.KEY_EXPERIMENT_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsCalibrationRecord> KEY_EXPERIMENTS_CALIBRATION_PRIMARY = UniqueKeys0.KEY_EXPERIMENTS_CALIBRATION_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord> KEY_EXPERIMENTS_PLATFORM_PRIMARY = UniqueKeys0.KEY_EXPERIMENTS_PLATFORM_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformModeRecord> KEY_EXPERIMENTS_PLATFORM_MODE_PRIMARY = UniqueKeys0.KEY_EXPERIMENTS_PLATFORM_MODE_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformStatusRecord> KEY_EXPERIMENTS_PLATFORM_STATUS_PRIMARY = UniqueKeys0.KEY_EXPERIMENTS_PLATFORM_STATUS_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.GiftCodeRecord> KEY_GIFT_CODE_PRIMARY = UniqueKeys0.KEY_GIFT_CODE_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationRecord> KEY_NOTIFICATION_PRIMARY = UniqueKeys0.KEY_NOTIFICATION_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationReceiverEmailRecord> KEY_NOTIFICATION_RECEIVER_EMAIL_PRIMARY = UniqueKeys0.KEY_NOTIFICATION_RECEIVER_EMAIL_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationTokenRecord> KEY_NOTIFICATION_TOKEN_PRIMARY = UniqueKeys0.KEY_NOTIFICATION_TOKEN_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.PlatformRecord> KEY_PLATFORM_PRIMARY = UniqueKeys0.KEY_PLATFORM_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord> KEY_RATING_PRIMARY = UniqueKeys0.KEY_RATING_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingConstraintRecord> KEY_RATING_CONSTRAINT_PRIMARY = UniqueKeys0.KEY_RATING_CONSTRAINT_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionExperimentRecord> KEY_RATING_OPTION_EXPERIMENT_PRIMARY = UniqueKeys0.KEY_RATING_OPTION_EXPERIMENT_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionTemplateRecord> KEY_RATING_OPTION_TEMPLATE_PRIMARY = UniqueKeys0.KEY_RATING_OPTION_TEMPLATE_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TagRecord> KEY_TAG_PRIMARY = UniqueKeys0.KEY_TAG_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord> KEY_TEMPLATE_PRIMARY = UniqueKeys0.KEY_TEMPLATE_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateConstraintRecord> KEY_TEMPLATE_CONSTRAINT_PRIMARY = UniqueKeys0.KEY_TEMPLATE_CONSTRAINT_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateTagRecord> KEY_TEMPLATE_TAG_PRIMARY = UniqueKeys0.KEY_TEMPLATE_TAG_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord> KEY_WORKER_PRIMARY = UniqueKeys0.KEY_WORKER_PRIMARY;
	public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerBalanceRecord> KEY_WORKER_BALANCE_PRIMARY = UniqueKeys0.KEY_WORKER_BALANCE_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityRecord> REFERENCEDANSWERQUALITY = ForeignKeys0.REFERENCEDANSWERQUALITY;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityRecord> REGERENCEDRATINQUALITY = ForeignKeys0.REGERENCEDRATINQUALITY;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserRecord> REFERENCEDTASKCHOOSER = ForeignKeys0.REFERENCEDTASKCHOOSER;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AnswerRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> IDEXPERIMENTANSWERS = ForeignKeys0.IDEXPERIMENTANSWERS;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AnswerRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord> WORKERANSWERED = ForeignKeys0.WORKERANSWERED;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> PARTICIPATEDIN = ForeignKeys0.PARTICIPATEDIN;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord> CALIBRATIONANSWER = ForeignKeys0.CALIBRATIONANSWER;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationResultRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord> REFERENCEDWORKER = ForeignKeys0.REFERENCEDWORKER;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationResultRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord> CHOSENANSWER = ForeignKeys0.CHOSENANSWER;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenAnswerQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> ANSWERQUALITYPARAMREFEXPERIMENT = ForeignKeys0.ANSWERQUALITYPARAMREFEXPERIMENT;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenAnswerQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityParamRecord> CHOSENANSWERQUALITYPARAM = ForeignKeys0.CHOSENANSWERQUALITYPARAM;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenRatingQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> CHOSENRATINGQUALITYPARAMREFEXPERIMENT = ForeignKeys0.CHOSENRATINGQUALITYPARAMREFEXPERIMENT;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenRatingQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityParamRecord> CHOSENRATINGQUALITYPARAM = ForeignKeys0.CHOSENRATINGQUALITYPARAM;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenTaskChooserParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> TASKCHOOSERPARAMREFEXPERIMENT = ForeignKeys0.TASKCHOOSERPARAMREFEXPERIMENT;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenTaskChooserParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserParamRecord> CHOOSENTASKCHOOSERPARAM = ForeignKeys0.CHOOSENTASKCHOOSERPARAM;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ConstraintRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> CONSTRAINEDEXPERIMENT = ForeignKeys0.CONSTRAINEDEXPERIMENT;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserRecord> USEDTASKCHOOSER = ForeignKeys0.USEDTASKCHOOSER;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityRecord> USEDANSWERQUALITY = ForeignKeys0.USEDANSWERQUALITY;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityRecord> USEDRATINGQUALITY = ForeignKeys0.USEDRATINGQUALITY;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord> USEDTEMPLATE = ForeignKeys0.USEDTEMPLATE;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsCalibrationRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord> REFERENCED_EXPERIMENTS_PLATFORM = ForeignKeys0.REFERENCED_EXPERIMENTS_PLATFORM;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsCalibrationRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord> REFERENCED_ANSWER = ForeignKeys0.REFERENCED_ANSWER;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> PLATFORM_USER = ForeignKeys0.PLATFORM_USER;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.PlatformRecord> ACTIVE_PLATFORM = ForeignKeys0.ACTIVE_PLATFORM;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformModeRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord> MODE_FOR_PLATFORM = ForeignKeys0.MODE_FOR_PLATFORM;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformStatusRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord> STATUS_FOR_PLATFORM = ForeignKeys0.STATUS_FOR_PLATFORM;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationReceiverEmailRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationRecord> REFERENCED_NOTIFICATION = ForeignKeys0.REFERENCED_NOTIFICATION;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationTokenRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationRecord> BELONGING_NOTIFICATION = ForeignKeys0.BELONGING_NOTIFICATION;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> IDEXPERIMENTRATING = ForeignKeys0.IDEXPERIMENTRATING;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AnswerRecord> IDANSWERSRATINGS = ForeignKeys0.IDANSWERSRATINGS;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord> WORKERRATED = ForeignKeys0.WORKERRATED;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingConstraintRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord> REFERENCED_RATING = ForeignKeys0.REFERENCED_RATING;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingConstraintRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ConstraintRecord> ROFFENDED_CONSTRAINT = ForeignKeys0.ROFFENDED_CONSTRAINT;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionExperimentRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> RATING_OPTIONS_EXPERIMENT_REFERENCE = ForeignKeys0.RATING_OPTIONS_EXPERIMENT_REFERENCE;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionTemplateRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord> REFERENCED_TEMPLATE = ForeignKeys0.REFERENCED_TEMPLATE;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TagRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> IDEXPERIMENTTAGS = ForeignKeys0.IDEXPERIMENTTAGS;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateConstraintRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord> CONSTRAINED_TEMPLATE = ForeignKeys0.CONSTRAINED_TEMPLATE;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateTagRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord> TAGGED_TEMPLATE = ForeignKeys0.TAGGED_TEMPLATE;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.PlatformRecord> WORKERORIGIN = ForeignKeys0.WORKERORIGIN;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerBalanceRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord> TRANSACTION_PARTNER = ForeignKeys0.TRANSACTION_PARTNER;
	public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerBalanceRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.GiftCodeRecord> USED_GIFT_CODE = ForeignKeys0.USED_GIFT_CODE;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityParamRecord, java.lang.Integer> IDENTITY_ALGORITHM_ANSWER_QUALITY_PARAM = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmAnswerQualityParam.ALGORITHM_ANSWER_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmAnswerQualityParam.ALGORITHM_ANSWER_QUALITY_PARAM.ID_ALGORITHM_ANSWER_QUALITY_PARAM);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityParamRecord, java.lang.Integer> IDENTITY_ALGORITHM_RATING_QUALITY_PARAM = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmRatingQualityParam.ALGORITHM_RATING_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmRatingQualityParam.ALGORITHM_RATING_QUALITY_PARAM.ID_ALGORITHM_RATING_QUALITY_PARAM);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserParamRecord, java.lang.Integer> IDENTITY_ALGORITHM_TASK_CHOOSER_PARAM = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmTaskChooserParam.ALGORITHM_TASK_CHOOSER_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmTaskChooserParam.ALGORITHM_TASK_CHOOSER_PARAM.ID_ALGORITHM_TASK_CHOOSER_PARAM);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AnswerRecord, java.lang.Integer> IDENTITY_ANSWER = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Answer.ANSWER, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Answer.ANSWER.ID_ANSWER);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord, java.lang.Integer> IDENTITY_CALIBRATION = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Calibration.CALIBRATION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Calibration.CALIBRATION.ID_CALIBRATION);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord, java.lang.Integer> IDENTITY_CALIBRATION_ANSWER_OPTION = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationAnswerOption.CALIBRATION_ANSWER_OPTION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationAnswerOption.CALIBRATION_ANSWER_OPTION.ID_CALIBRATION_ANSWER_OPTION);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationResultRecord, java.lang.Integer> IDENTITY_CALIBRATION_RESULT = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationResult.CALIBRATION_RESULT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationResult.CALIBRATION_RESULT.ID_CALIBRATION_RESULT);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenAnswerQualityParamRecord, java.lang.Integer> IDENTITY_CHOSEN_ANSWER_QUALITY_PARAM = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenAnswerQualityParam.CHOSEN_ANSWER_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenAnswerQualityParam.CHOSEN_ANSWER_QUALITY_PARAM.ID_ALGORITHM_ANSWER_QUALITY_PARAM_CHOSEN);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenRatingQualityParamRecord, java.lang.Integer> IDENTITY_CHOSEN_RATING_QUALITY_PARAM = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenRatingQualityParam.CHOSEN_RATING_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenRatingQualityParam.CHOSEN_RATING_QUALITY_PARAM.ID_ALGORITHM_RATING_QUALITY_CHOSEN);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenTaskChooserParamRecord, java.lang.Integer> IDENTITY_CHOSEN_TASK_CHOOSER_PARAM = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenTaskChooserParam.CHOSEN_TASK_CHOOSER_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenTaskChooserParam.CHOSEN_TASK_CHOOSER_PARAM.ID_CHOOSEN_TASK_CHOOSER_PARAM);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ConstraintRecord, java.lang.Integer> IDENTITY_CONSTRAINT = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT.ID_CONSTRAINT);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord, java.lang.Integer> IDENTITY_EXPERIMENT = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.ID_EXPERIMENT);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsCalibrationRecord, java.lang.Integer> IDENTITY_EXPERIMENTS_CALIBRATION = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsCalibration.EXPERIMENTS_CALIBRATION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsCalibration.EXPERIMENTS_CALIBRATION.ID_EXPERIMENTS_CALIBRATION);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord, java.lang.Integer> IDENTITY_EXPERIMENTS_PLATFORM = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatform.EXPERIMENTS_PLATFORM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatform.EXPERIMENTS_PLATFORM.IDEXPERIMENTS_PLATFORMS);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.GiftCodeRecord, java.lang.Integer> IDENTITY_GIFT_CODE = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.GiftCode.GIFT_CODE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.GiftCode.GIFT_CODE.ID_GIFT_CODE);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationRecord, java.lang.Integer> IDENTITY_NOTIFICATION = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION.ID_NOTIFICATION);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationReceiverEmailRecord, java.lang.Integer> IDENTITY_NOTIFICATION_RECEIVER_EMAIL = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationReceiverEmail.NOTIFICATION_RECEIVER_EMAIL, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationReceiverEmail.NOTIFICATION_RECEIVER_EMAIL.ID_NOTIFICATION_RECEIVER_EMAIL);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationTokenRecord, java.lang.Integer> IDENTITY_NOTIFICATION_TOKEN = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationToken.NOTIFICATION_TOKEN, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationToken.NOTIFICATION_TOKEN.ID_NOTIFICATION_TOKEN);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord, java.lang.Integer> IDENTITY_RATING = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating.RATING, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating.RATING.ID_RATING);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingConstraintRecord, java.lang.Integer> IDENTITY_RATING_CONSTRAINT = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingConstraint.RATING_CONSTRAINT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingConstraint.RATING_CONSTRAINT.ID_RATING_CONSTRAINTS);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionExperimentRecord, java.lang.Integer> IDENTITY_RATING_OPTION_EXPERIMENT = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionExperiment.RATING_OPTION_EXPERIMENT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionExperiment.RATING_OPTION_EXPERIMENT.ID_RATING_OPTION_EXPERIMENT);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionTemplateRecord, java.lang.Integer> IDENTITY_RATING_OPTION_TEMPLATE = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionTemplate.RATING_OPTION_TEMPLATE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionTemplate.RATING_OPTION_TEMPLATE.ID_RATING_OPTIONS_TEMPLATE);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TagRecord, java.lang.Integer> IDENTITY_TAG = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Tag.TAG, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Tag.TAG.ID_TAG);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord, java.lang.Integer> IDENTITY_TEMPLATE = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Template.TEMPLATE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Template.TEMPLATE.ID_TEMPLATE);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateConstraintRecord, java.lang.Integer> IDENTITY_TEMPLATE_CONSTRAINT = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateConstraint.TEMPLATE_CONSTRAINT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateConstraint.TEMPLATE_CONSTRAINT.ID_TEAMPLATE_CONSTRAINT);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateTagRecord, java.lang.Integer> IDENTITY_TEMPLATE_TAG = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateTag.TEMPLATE_TAG, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateTag.TEMPLATE_TAG.ID_TEMPLATE_TAG);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord, java.lang.Integer> IDENTITY_WORKER = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Worker.WORKER, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Worker.WORKER.ID_WORKER);
		public static org.jooq.Identity<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerBalanceRecord, java.lang.Integer> IDENTITY_WORKER_BALANCE = createIdentity(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.WorkerBalance.WORKER_BALANCE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.WorkerBalance.WORKER_BALANCE.ID_WORKER_BALANCE);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityRecord> KEY_ALGORITHM_ANSWER_QUALITY_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmAnswerQuality.ALGORITHM_ANSWER_QUALITY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmAnswerQuality.ALGORITHM_ANSWER_QUALITY.ID_ALGORITHM_ANSWER_QUALITY);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityParamRecord> KEY_ALGORITHM_ANSWER_QUALITY_PARAM_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmAnswerQualityParam.ALGORITHM_ANSWER_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmAnswerQualityParam.ALGORITHM_ANSWER_QUALITY_PARAM.ID_ALGORITHM_ANSWER_QUALITY_PARAM);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityRecord> KEY_ALGORITHM_RATING_QUALITY_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmRatingQuality.ALGORITHM_RATING_QUALITY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmRatingQuality.ALGORITHM_RATING_QUALITY.ID_ALGORITHM_RATING_QUALITY);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityParamRecord> KEY_ALGORITHM_RATING_QUALITY_PARAM_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmRatingQualityParam.ALGORITHM_RATING_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmRatingQualityParam.ALGORITHM_RATING_QUALITY_PARAM.ID_ALGORITHM_RATING_QUALITY_PARAM);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserRecord> KEY_ALGORITHM_TASK_CHOOSER_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmTaskChooser.ALGORITHM_TASK_CHOOSER, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmTaskChooser.ALGORITHM_TASK_CHOOSER.ID_TASK_CHOOSER);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserParamRecord> KEY_ALGORITHM_TASK_CHOOSER_PARAM_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmTaskChooserParam.ALGORITHM_TASK_CHOOSER_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmTaskChooserParam.ALGORITHM_TASK_CHOOSER_PARAM.ID_ALGORITHM_TASK_CHOOSER_PARAM);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AnswerRecord> KEY_ANSWER_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Answer.ANSWER, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Answer.ANSWER.ID_ANSWER);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord> KEY_CALIBRATION_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Calibration.CALIBRATION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Calibration.CALIBRATION.ID_CALIBRATION);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord> KEY_CALIBRATION_EXPERIMENT_UNIQUE = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Calibration.CALIBRATION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Calibration.CALIBRATION.EXPERIMENT);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord> KEY_CALIBRATION_ANSWER_OPTION_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationAnswerOption.CALIBRATION_ANSWER_OPTION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationAnswerOption.CALIBRATION_ANSWER_OPTION.ID_CALIBRATION_ANSWER_OPTION);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationResultRecord> KEY_CALIBRATION_RESULT_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationResult.CALIBRATION_RESULT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationResult.CALIBRATION_RESULT.ID_CALIBRATION_RESULT);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenAnswerQualityParamRecord> KEY_CHOSEN_ANSWER_QUALITY_PARAM_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenAnswerQualityParam.CHOSEN_ANSWER_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenAnswerQualityParam.CHOSEN_ANSWER_QUALITY_PARAM.ID_ALGORITHM_ANSWER_QUALITY_PARAM_CHOSEN);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenRatingQualityParamRecord> KEY_CHOSEN_RATING_QUALITY_PARAM_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenRatingQualityParam.CHOSEN_RATING_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenRatingQualityParam.CHOSEN_RATING_QUALITY_PARAM.ID_ALGORITHM_RATING_QUALITY_CHOSEN);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenTaskChooserParamRecord> KEY_CHOSEN_TASK_CHOOSER_PARAM_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenTaskChooserParam.CHOSEN_TASK_CHOOSER_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenTaskChooserParam.CHOSEN_TASK_CHOOSER_PARAM.ID_CHOOSEN_TASK_CHOOSER_PARAM);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ConstraintRecord> KEY_CONSTRAINT_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT.ID_CONSTRAINT);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.DatabaseVersionRecord> KEY_DATABASE_VERSION_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.DatabaseVersion.DATABASE_VERSION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.DatabaseVersion.DATABASE_VERSION.IDDATABASE_VERSION);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> KEY_EXPERIMENT_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.ID_EXPERIMENT);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsCalibrationRecord> KEY_EXPERIMENTS_CALIBRATION_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsCalibration.EXPERIMENTS_CALIBRATION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsCalibration.EXPERIMENTS_CALIBRATION.ID_EXPERIMENTS_CALIBRATION);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord> KEY_EXPERIMENTS_PLATFORM_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatform.EXPERIMENTS_PLATFORM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatform.EXPERIMENTS_PLATFORM.IDEXPERIMENTS_PLATFORMS);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformModeRecord> KEY_EXPERIMENTS_PLATFORM_MODE_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatformMode.EXPERIMENTS_PLATFORM_MODE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatformMode.EXPERIMENTS_PLATFORM_MODE.IDEXPERIMENTS_PLATFORM_STOPGAP);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformStatusRecord> KEY_EXPERIMENTS_PLATFORM_STATUS_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatformStatus.EXPERIMENTS_PLATFORM_STATUS, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatformStatus.EXPERIMENTS_PLATFORM_STATUS.IDEXPERIMENTS_PLATFORM_STATUS);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.GiftCodeRecord> KEY_GIFT_CODE_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.GiftCode.GIFT_CODE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.GiftCode.GIFT_CODE.ID_GIFT_CODE);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationRecord> KEY_NOTIFICATION_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION.ID_NOTIFICATION);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationReceiverEmailRecord> KEY_NOTIFICATION_RECEIVER_EMAIL_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationReceiverEmail.NOTIFICATION_RECEIVER_EMAIL, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationReceiverEmail.NOTIFICATION_RECEIVER_EMAIL.ID_NOTIFICATION_RECEIVER_EMAIL);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationTokenRecord> KEY_NOTIFICATION_TOKEN_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationToken.NOTIFICATION_TOKEN, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationToken.NOTIFICATION_TOKEN.ID_NOTIFICATION_TOKEN);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.PlatformRecord> KEY_PLATFORM_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Platform.PLATFORM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Platform.PLATFORM.ID_PLATFORM);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord> KEY_RATING_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating.RATING, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating.RATING.ID_RATING);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingConstraintRecord> KEY_RATING_CONSTRAINT_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingConstraint.RATING_CONSTRAINT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingConstraint.RATING_CONSTRAINT.ID_RATING_CONSTRAINTS);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionExperimentRecord> KEY_RATING_OPTION_EXPERIMENT_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionExperiment.RATING_OPTION_EXPERIMENT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionExperiment.RATING_OPTION_EXPERIMENT.ID_RATING_OPTION_EXPERIMENT);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionTemplateRecord> KEY_RATING_OPTION_TEMPLATE_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionTemplate.RATING_OPTION_TEMPLATE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionTemplate.RATING_OPTION_TEMPLATE.ID_RATING_OPTIONS_TEMPLATE);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TagRecord> KEY_TAG_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Tag.TAG, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Tag.TAG.ID_TAG);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord> KEY_TEMPLATE_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Template.TEMPLATE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Template.TEMPLATE.ID_TEMPLATE);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateConstraintRecord> KEY_TEMPLATE_CONSTRAINT_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateConstraint.TEMPLATE_CONSTRAINT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateConstraint.TEMPLATE_CONSTRAINT.ID_TEAMPLATE_CONSTRAINT);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateTagRecord> KEY_TEMPLATE_TAG_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateTag.TEMPLATE_TAG, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateTag.TEMPLATE_TAG.ID_TEMPLATE_TAG);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord> KEY_WORKER_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Worker.WORKER, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Worker.WORKER.ID_WORKER);
		public static final org.jooq.UniqueKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerBalanceRecord> KEY_WORKER_BALANCE_PRIMARY = createUniqueKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.WorkerBalance.WORKER_BALANCE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.WorkerBalance.WORKER_BALANCE.ID_WORKER_BALANCE);
	}

	private static class ForeignKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityRecord> REFERENCEDANSWERQUALITY = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_ALGORITHM_ANSWER_QUALITY_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmAnswerQualityParam.ALGORITHM_ANSWER_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmAnswerQualityParam.ALGORITHM_ANSWER_QUALITY_PARAM.ALGORITHM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityRecord> REGERENCEDRATINQUALITY = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_ALGORITHM_RATING_QUALITY_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmRatingQualityParam.ALGORITHM_RATING_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmRatingQualityParam.ALGORITHM_RATING_QUALITY_PARAM.ALGORITHM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserRecord> REFERENCEDTASKCHOOSER = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_ALGORITHM_TASK_CHOOSER_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmTaskChooserParam.ALGORITHM_TASK_CHOOSER_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.AlgorithmTaskChooserParam.ALGORITHM_TASK_CHOOSER_PARAM.ALGORITHM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AnswerRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> IDEXPERIMENTANSWERS = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Answer.ANSWER, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Answer.ANSWER.EXPERIMENT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AnswerRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord> WORKERANSWERED = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_WORKER_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Answer.ANSWER, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Answer.ANSWER.WORKER_ID);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> PARTICIPATEDIN = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Calibration.CALIBRATION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Calibration.CALIBRATION.EXPERIMENT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord> CALIBRATIONANSWER = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_CALIBRATION_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationAnswerOption.CALIBRATION_ANSWER_OPTION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationAnswerOption.CALIBRATION_ANSWER_OPTION.CALIBRATION);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationResultRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord> REFERENCEDWORKER = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_WORKER_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationResult.CALIBRATION_RESULT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationResult.CALIBRATION_RESULT.WORKER);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationResultRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord> CHOSENANSWER = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_CALIBRATION_ANSWER_OPTION_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationResult.CALIBRATION_RESULT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.CalibrationResult.CALIBRATION_RESULT.ANSWER);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenAnswerQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> ANSWERQUALITYPARAMREFEXPERIMENT = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenAnswerQualityParam.CHOSEN_ANSWER_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenAnswerQualityParam.CHOSEN_ANSWER_QUALITY_PARAM.EXPERIMENT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenAnswerQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityParamRecord> CHOSENANSWERQUALITYPARAM = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_ALGORITHM_ANSWER_QUALITY_PARAM_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenAnswerQualityParam.CHOSEN_ANSWER_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenAnswerQualityParam.CHOSEN_ANSWER_QUALITY_PARAM.PARAM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenRatingQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> CHOSENRATINGQUALITYPARAMREFEXPERIMENT = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenRatingQualityParam.CHOSEN_RATING_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenRatingQualityParam.CHOSEN_RATING_QUALITY_PARAM.EXPERIMENT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenRatingQualityParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityParamRecord> CHOSENRATINGQUALITYPARAM = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_ALGORITHM_RATING_QUALITY_PARAM_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenRatingQualityParam.CHOSEN_RATING_QUALITY_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenRatingQualityParam.CHOSEN_RATING_QUALITY_PARAM.PARAM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenTaskChooserParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> TASKCHOOSERPARAMREFEXPERIMENT = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenTaskChooserParam.CHOSEN_TASK_CHOOSER_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenTaskChooserParam.CHOSEN_TASK_CHOOSER_PARAM.EXPERIMENT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ChosenTaskChooserParamRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserParamRecord> CHOOSENTASKCHOOSERPARAM = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_ALGORITHM_TASK_CHOOSER_PARAM_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenTaskChooserParam.CHOSEN_TASK_CHOOSER_PARAM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ChosenTaskChooserParam.CHOSEN_TASK_CHOOSER_PARAM.PARAM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ConstraintRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> CONSTRAINEDEXPERIMENT = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT.EXPERIMENT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmTaskChooserRecord> USEDTASKCHOOSER = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_ALGORITHM_TASK_CHOOSER_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.ALGORITHM_TASK_CHOOSER);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmAnswerQualityRecord> USEDANSWERQUALITY = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_ALGORITHM_ANSWER_QUALITY_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.ALGORITHM_QUALITY_ANSWER);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AlgorithmRatingQualityRecord> USEDRATINGQUALITY = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_ALGORITHM_RATING_QUALITY_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.ALGORITHM_QUALITY_RATING);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord> USEDTEMPLATE = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_TEMPLATE_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.TEMPLATE);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsCalibrationRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord> REFERENCED_EXPERIMENTS_PLATFORM = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENTS_PLATFORM_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsCalibration.EXPERIMENTS_CALIBRATION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsCalibration.EXPERIMENTS_CALIBRATION.EXPERIMENTS_PLATFORM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsCalibrationRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationAnswerOptionRecord> REFERENCED_ANSWER = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_CALIBRATION_ANSWER_OPTION_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsCalibration.EXPERIMENTS_CALIBRATION, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsCalibration.EXPERIMENTS_CALIBRATION.ANSWER);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> PLATFORM_USER = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatform.EXPERIMENTS_PLATFORM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatform.EXPERIMENTS_PLATFORM.EXPERIMENT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.PlatformRecord> ACTIVE_PLATFORM = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_PLATFORM_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatform.EXPERIMENTS_PLATFORM, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatform.EXPERIMENTS_PLATFORM.PLATFORM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformModeRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord> MODE_FOR_PLATFORM = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENTS_PLATFORM_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatformMode.EXPERIMENTS_PLATFORM_MODE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatformMode.EXPERIMENTS_PLATFORM_MODE.EXPERIMENTS_PLATFORM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformStatusRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentsPlatformRecord> STATUS_FOR_PLATFORM = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENTS_PLATFORM_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatformStatus.EXPERIMENTS_PLATFORM_STATUS, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.ExperimentsPlatformStatus.EXPERIMENTS_PLATFORM_STATUS.PLATFORM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationReceiverEmailRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationRecord> REFERENCED_NOTIFICATION = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_NOTIFICATION_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationReceiverEmail.NOTIFICATION_RECEIVER_EMAIL, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationReceiverEmail.NOTIFICATION_RECEIVER_EMAIL.NOTIFICATION);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationTokenRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationRecord> BELONGING_NOTIFICATION = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_NOTIFICATION_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationToken.NOTIFICATION_TOKEN, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.NotificationToken.NOTIFICATION_TOKEN.NOTIFICATION);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> IDEXPERIMENTRATING = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating.RATING, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating.RATING.EXPERIMENT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.AnswerRecord> IDANSWERSRATINGS = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_ANSWER_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating.RATING, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating.RATING.ANSWER_R);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord> WORKERRATED = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_WORKER_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating.RATING, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Rating.RATING.WORKER_ID);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingConstraintRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord> REFERENCED_RATING = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_RATING_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingConstraint.RATING_CONSTRAINT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingConstraint.RATING_CONSTRAINT.REF_RATING);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingConstraintRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ConstraintRecord> ROFFENDED_CONSTRAINT = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_CONSTRAINT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingConstraint.RATING_CONSTRAINT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingConstraint.RATING_CONSTRAINT.OFF_CONSTRAINT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionExperimentRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> RATING_OPTIONS_EXPERIMENT_REFERENCE = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionExperiment.RATING_OPTION_EXPERIMENT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionExperiment.RATING_OPTION_EXPERIMENT.EXPERIMENT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingOptionTemplateRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord> REFERENCED_TEMPLATE = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_TEMPLATE_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionTemplate.RATING_OPTION_TEMPLATE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.RatingOptionTemplate.RATING_OPTION_TEMPLATE.TEMPLATE);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TagRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> IDEXPERIMENTTAGS = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_EXPERIMENT_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Tag.TAG, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Tag.TAG.EXPERIMENT);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateConstraintRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord> CONSTRAINED_TEMPLATE = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_TEMPLATE_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateConstraint.TEMPLATE_CONSTRAINT, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateConstraint.TEMPLATE_CONSTRAINT.TEMPLATE);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateTagRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord> TAGGED_TEMPLATE = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_TEMPLATE_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateTag.TEMPLATE_TAG, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.TemplateTag.TEMPLATE_TAG.TEMPLATE);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.PlatformRecord> WORKERORIGIN = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_PLATFORM_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Worker.WORKER, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Worker.WORKER.PLATFORM);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerBalanceRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerRecord> TRANSACTION_PARTNER = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_WORKER_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.WorkerBalance.WORKER_BALANCE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.WorkerBalance.WORKER_BALANCE.WORKER);
		public static final org.jooq.ForeignKey<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerBalanceRecord, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.GiftCodeRecord> USED_GIFT_CODE = createForeignKey(edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys.KEY_GIFT_CODE_PRIMARY, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.WorkerBalance.WORKER_BALANCE, edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.WorkerBalance.WORKER_BALANCE.GIFT_CODE);
	}
}
