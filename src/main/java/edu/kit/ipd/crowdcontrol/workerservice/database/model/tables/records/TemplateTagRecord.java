/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.objectservice.database.model.tables.records;


import edu.kit.ipd.crowdcontrol.objectservice.database.model.tables.TemplateTag;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TemplateTagRecord extends UpdatableRecordImpl<TemplateTagRecord> implements Record3<Integer, Integer, String> {

	private static final long serialVersionUID = 980602388;

	/**
	 * Setter for <code>crowdcontrol.Template_Tag.id_template_Tag</code>.
	 */
	public void setIdTemplateTag(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Template_Tag.id_template_Tag</code>.
	 */
	public Integer getIdTemplateTag() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrol.Template_Tag.template</code>.
	 */
	public void setTemplate(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Template_Tag.template</code>.
	 */
	public Integer getTemplate() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrol.Template_Tag.tag</code>.
	 */
	public void setTag(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Template_Tag.tag</code>.
	 */
	public String getTag() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return TemplateTag.TEMPLATE_TAG.ID_TEMPLATE_TAG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return TemplateTag.TEMPLATE_TAG.TEMPLATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return TemplateTag.TEMPLATE_TAG.TAG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdTemplateTag();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getTemplate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getTag();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TemplateTagRecord value1(Integer value) {
		setIdTemplateTag(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TemplateTagRecord value2(Integer value) {
		setTemplate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TemplateTagRecord value3(String value) {
		setTag(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TemplateTagRecord values(Integer value1, Integer value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TemplateTagRecord
	 */
	public TemplateTagRecord() {
		super(TemplateTag.TEMPLATE_TAG);
	}

	/**
	 * Create a detached, initialised TemplateTagRecord
	 */
	public TemplateTagRecord(Integer idTemplateTag, Integer template, String tag) {
		super(TemplateTag.TEMPLATE_TAG);

		setValue(0, idTemplateTag);
		setValue(1, template);
		setValue(2, tag);
	}
}
