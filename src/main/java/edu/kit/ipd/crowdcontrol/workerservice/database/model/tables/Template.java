/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.TemplateRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Template extends TableImpl<TemplateRecord> {

	private static final long serialVersionUID = -191216313;

	/**
	 * The reference instance of <code>crowdcontrol.Template</code>
	 */
	public static final Template TEMPLATE = new Template();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TemplateRecord> getRecordType() {
		return TemplateRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Template.id_template</code>.
	 */
	public final TableField<TemplateRecord, Integer> ID_TEMPLATE = createField("id_template", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Template.template</code>.
	 */
	public final TableField<TemplateRecord, String> TEMPLATE_ = createField("template", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Template.title</code>.
	 */
	public final TableField<TemplateRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(191).nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Template.answer_type</code>.
	 */
	public final TableField<TemplateRecord, String> ANSWER_TYPE = createField("answer_type", org.jooq.impl.SQLDataType.VARCHAR.length(191), this, "");

	/**
	 * Create a <code>crowdcontrol.Template</code> table reference
	 */
	public Template() {
		this("Template", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Template</code> table reference
	 */
	public Template(String alias) {
		this(alias, TEMPLATE);
	}

	private Template(String alias, Table<TemplateRecord> aliased) {
		this(alias, aliased, null);
	}

	private Template(String alias, Table<TemplateRecord> aliased, Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TemplateRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TEMPLATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TemplateRecord> getPrimaryKey() {
		return Keys.KEY_TEMPLATE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TemplateRecord>> getKeys() {
		return Arrays.<UniqueKey<TemplateRecord>>asList(Keys.KEY_TEMPLATE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Template as(String alias) {
		return new Template(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Template rename(String name) {
		return new Template(name, null);
	}
}
