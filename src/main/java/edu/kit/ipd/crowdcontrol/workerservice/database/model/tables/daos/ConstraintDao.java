/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.daos;

import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.pojos.Constraint;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ConstraintRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConstraintDao extends org.jooq.impl.DAOImpl<ConstraintRecord, Constraint, java.lang.Integer> {

	/**
	 * Create a new ConstraintDao without any configuration
	 */
	public ConstraintDao() {
		super(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT, Constraint.class);
	}

	/**
	 * Create a new ConstraintDao with an attached configuration
	 */
	public ConstraintDao(org.jooq.Configuration configuration) {
		super(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT, Constraint.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(Constraint object) {
		return object.getIdconstraint();
	}

	/**
	 * Fetch records that have <code>idConstraint IN (values)</code>
	 */
	public java.util.List<Constraint> fetchByIdconstraint(java.lang.Integer... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT.IDCONSTRAINT, values);
	}

	/**
	 * Fetch a unique record that has <code>idConstraint = value</code>
	 */
	public Constraint fetchOneByIdconstraint(java.lang.Integer value) {
		return fetchOne(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT.IDCONSTRAINT, value);
	}

	/**
	 * Fetch records that have <code>constraint IN (values)</code>
	 */
	public java.util.List<Constraint> fetchByConstraint(java.lang.String... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT.CONSTRAINT_, values);
	}

	/**
	 * Fetch records that have <code>experiment IN (values)</code>
	 */
	public java.util.List<Constraint> fetchByExperiment(java.lang.Integer... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Constraint.CONSTRAINT.EXPERIMENT, values);
	}
}
