/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.daos;

import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.pojos.Notification;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.NotificationRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationDao extends org.jooq.impl.DAOImpl<NotificationRecord, Notification, java.lang.Integer> {

	/**
	 * Create a new NotificationDao without any configuration
	 */
	public NotificationDao() {
		super(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION, Notification.class);
	}

	/**
	 * Create a new NotificationDao with an attached configuration
	 */
	public NotificationDao(org.jooq.Configuration configuration) {
		super(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION, Notification.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(Notification object) {
		return object.getIdnotification();
	}

	/**
	 * Fetch records that have <code>idNotification IN (values)</code>
	 */
	public java.util.List<Notification> fetchByIdnotification(java.lang.Integer... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION.IDNOTIFICATION, values);
	}

	/**
	 * Fetch a unique record that has <code>idNotification = value</code>
	 */
	public Notification fetchOneByIdnotification(java.lang.Integer value) {
		return fetchOne(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION.IDNOTIFICATION, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public java.util.List<Notification> fetchByName(java.lang.String... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION.NAME, values);
	}

	/**
	 * Fetch records that have <code>description IN (values)</code>
	 */
	public java.util.List<Notification> fetchByDescription(java.lang.String... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION.DESCRIPTION, values);
	}

	/**
	 * Fetch records that have <code>checkPeriod IN (values)</code>
	 */
	public java.util.List<Notification> fetchByCheckperiod(java.lang.Integer... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION.CHECKPERIOD, values);
	}

	/**
	 * Fetch records that have <code>sendThreshold IN (values)</code>
	 */
	public java.util.List<Notification> fetchBySendthreshold(java.lang.Integer... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION.SENDTHRESHOLD, values);
	}

	/**
	 * Fetch records that have <code>query IN (values)</code>
	 */
	public java.util.List<Notification> fetchByQuery(java.lang.String... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION.QUERY, values);
	}

	/**
	 * Fetch records that have <code>lastSent IN (values)</code>
	 */
	public java.util.List<Notification> fetchByLastsent(java.sql.Timestamp... values) {
		return fetch(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Notification.NOTIFICATION.LASTSENT, values);
	}
}
