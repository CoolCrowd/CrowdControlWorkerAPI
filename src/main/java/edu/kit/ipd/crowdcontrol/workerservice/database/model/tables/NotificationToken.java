/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.objectservice.database.model.tables;


import edu.kit.ipd.crowdcontrol.objectservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.objectservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.objectservice.database.model.tables.records.NotificationTokenRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationToken extends TableImpl<NotificationTokenRecord> {

	private static final long serialVersionUID = -214328712;

	/**
	 * The reference instance of <code>crowdcontrol.Notification_Token</code>
	 */
	public static final NotificationToken NOTIFICATION_TOKEN = new NotificationToken();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NotificationTokenRecord> getRecordType() {
		return NotificationTokenRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Notification_Token.id_notification_Token</code>.
	 */
	public final TableField<NotificationTokenRecord, Integer> ID_NOTIFICATION_TOKEN = createField("id_notification_Token", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Notification_Token.result_id</code>.
	 */
	public final TableField<NotificationTokenRecord, Integer> RESULT_ID = createField("result_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Notification_Token.result_token</code>.
	 */
	public final TableField<NotificationTokenRecord, String> RESULT_TOKEN = createField("result_token", org.jooq.impl.SQLDataType.VARCHAR.length(191).nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Notification_Token.notification</code>.
	 */
	public final TableField<NotificationTokenRecord, Integer> NOTIFICATION = createField("notification", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>crowdcontrol.Notification_Token</code> table reference
	 */
	public NotificationToken() {
		this("Notification_Token", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Notification_Token</code> table reference
	 */
	public NotificationToken(String alias) {
		this(alias, NOTIFICATION_TOKEN);
	}

	private NotificationToken(String alias, Table<NotificationTokenRecord> aliased) {
		this(alias, aliased, null);
	}

	private NotificationToken(String alias, Table<NotificationTokenRecord> aliased, Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<NotificationTokenRecord, Integer> getIdentity() {
		return Keys.IDENTITY_NOTIFICATION_TOKEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NotificationTokenRecord> getPrimaryKey() {
		return Keys.KEY_NOTIFICATION_TOKEN_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NotificationTokenRecord>> getKeys() {
		return Arrays.<UniqueKey<NotificationTokenRecord>>asList(Keys.KEY_NOTIFICATION_TOKEN_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<NotificationTokenRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<NotificationTokenRecord, ?>>asList(Keys.BELONGING_NOTIFICATION);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotificationToken as(String alias) {
		return new NotificationToken(alias, this);
	}

	/**
	 * Rename this table
	 */
	public NotificationToken rename(String name) {
		return new NotificationToken(name, null);
	}
}
