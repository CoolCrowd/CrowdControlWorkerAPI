/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.objectservice.database.model.tables;


import edu.kit.ipd.crowdcontrol.objectservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.objectservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.objectservice.database.model.tables.records.NotificationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Notification extends TableImpl<NotificationRecord> {

	private static final long serialVersionUID = 1652819565;

	/**
	 * The reference instance of <code>crowdcontrol.Notification</code>
	 */
	public static final Notification NOTIFICATION = new Notification();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NotificationRecord> getRecordType() {
		return NotificationRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Notification.id_notification</code>.
	 */
	public final TableField<NotificationRecord, Integer> ID_NOTIFICATION = createField("id_notification", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Notification.name</code>.
	 */
	public final TableField<NotificationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Notification.description</code>.
	 */
	public final TableField<NotificationRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Notification.checkPeriod</code>.
	 */
	public final TableField<NotificationRecord, Integer> CHECKPERIOD = createField("checkPeriod", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Notification.query</code>.
	 */
	public final TableField<NotificationRecord, String> QUERY = createField("query", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Notification.send_once</code>.
	 */
	public final TableField<NotificationRecord, Boolean> SEND_ONCE = createField("send_once", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

	/**
	 * Create a <code>crowdcontrol.Notification</code> table reference
	 */
	public Notification() {
		this("Notification", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Notification</code> table reference
	 */
	public Notification(String alias) {
		this(alias, NOTIFICATION);
	}

	private Notification(String alias, Table<NotificationRecord> aliased) {
		this(alias, aliased, null);
	}

	private Notification(String alias, Table<NotificationRecord> aliased, Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<NotificationRecord, Integer> getIdentity() {
		return Keys.IDENTITY_NOTIFICATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NotificationRecord> getPrimaryKey() {
		return Keys.KEY_NOTIFICATION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NotificationRecord>> getKeys() {
		return Arrays.<UniqueKey<NotificationRecord>>asList(Keys.KEY_NOTIFICATION_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Notification as(String alias) {
		return new Notification(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Notification rename(String name) {
		return new Notification(name, null);
	}
}
