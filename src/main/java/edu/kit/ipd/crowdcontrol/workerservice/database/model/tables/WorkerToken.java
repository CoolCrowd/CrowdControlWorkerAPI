/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.WorkerTokenRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkerToken extends TableImpl<WorkerTokenRecord> {

	private static final long serialVersionUID = 1987250265;

	/**
	 * The reference instance of <code>crowdcontrol.Worker_Token</code>
	 */
	public static final WorkerToken WORKER_TOKEN = new WorkerToken();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<WorkerTokenRecord> getRecordType() {
		return WorkerTokenRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Worker_Token.token</code>.
	 */
	public final TableField<WorkerTokenRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(191).nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Worker_Token.worker_id</code>.
	 */
	public final TableField<WorkerTokenRecord, Integer> WORKER_ID = createField("worker_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>crowdcontrol.Worker_Token</code> table reference
	 */
	public WorkerToken() {
		this("Worker_Token", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Worker_Token</code> table reference
	 */
	public WorkerToken(String alias) {
		this(alias, WORKER_TOKEN);
	}

	private WorkerToken(String alias, Table<WorkerTokenRecord> aliased) {
		this(alias, aliased, null);
	}

	private WorkerToken(String alias, Table<WorkerTokenRecord> aliased, Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<WorkerTokenRecord> getPrimaryKey() {
		return Keys.KEY_WORKER_TOKEN_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<WorkerTokenRecord>> getKeys() {
		return Arrays.<UniqueKey<WorkerTokenRecord>>asList(Keys.KEY_WORKER_TOKEN_PRIMARY, Keys.KEY_WORKER_TOKEN_TOKEN_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<WorkerTokenRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<WorkerTokenRecord, ?>>asList(Keys.TOKEN_FOR_UD);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkerToken as(String alias) {
		return new WorkerToken(alias, this);
	}

	/**
	 * Rename this table
	 */
	public WorkerToken rename(String name) {
		return new WorkerToken(name, null);
	}
}
