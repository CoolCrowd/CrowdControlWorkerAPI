/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables;


import edu.kit.ipd.crowdcontrol.workerservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.CalibrationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Calibration extends TableImpl<CalibrationRecord> {

	private static final long serialVersionUID = -623261613;

	/**
	 * The reference instance of <code>crowdcontrol.Calibration</code>
	 */
	public static final Calibration CALIBRATION = new Calibration();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CalibrationRecord> getRecordType() {
		return CalibrationRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Calibration.id_calibration</code>.
	 */
	public final TableField<CalibrationRecord, Integer> ID_CALIBRATION = createField("id_calibration", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Calibration.property</code>.
	 */
	public final TableField<CalibrationRecord, String> PROPERTY = createField("property", org.jooq.impl.SQLDataType.VARCHAR.length(191).nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Calibration.name</code>.
	 */
	public final TableField<CalibrationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(191).nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Calibration.experiment</code>.
	 */
	public final TableField<CalibrationRecord, Integer> EXPERIMENT = createField("experiment", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>crowdcontrol.Calibration</code> table reference
	 */
	public Calibration() {
		this("Calibration", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Calibration</code> table reference
	 */
	public Calibration(String alias) {
		this(alias, CALIBRATION);
	}

	private Calibration(String alias, Table<CalibrationRecord> aliased) {
		this(alias, aliased, null);
	}

	private Calibration(String alias, Table<CalibrationRecord> aliased, Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CalibrationRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CALIBRATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CalibrationRecord> getPrimaryKey() {
		return Keys.KEY_CALIBRATION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CalibrationRecord>> getKeys() {
		return Arrays.<UniqueKey<CalibrationRecord>>asList(Keys.KEY_CALIBRATION_PRIMARY, Keys.KEY_CALIBRATION_EXPERIMENT_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CalibrationRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CalibrationRecord, ?>>asList(Keys.PARTICIPATEDIN);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Calibration as(String alias) {
		return new Calibration(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Calibration rename(String name) {
		return new Calibration(name, null);
	}
}
