/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.objectservice.database.model.tables.records;


import edu.kit.ipd.crowdcontrol.objectservice.database.model.tables.Experiment;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperimentRecord extends UpdatableRecordImpl<ExperimentRecord> implements Record19<Integer, String, String, String, Integer, Integer, Integer, Integer, String, String, String, String, Integer, Integer, Integer, String, Integer, Integer, Integer> {

	private static final long serialVersionUID = -2138130260;

	/**
	 * Setter for <code>crowdcontrol.Experiment.id_experiment</code>.
	 */
	public void setIdExperiment(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.id_experiment</code>.
	 */
	public Integer getIdExperiment() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.title</code>.
	 */
	public void setTitle(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.title</code>.
	 */
	public String getTitle() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.description</code>.
	 */
	public void setDescription(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.description_raw</code>.
	 */
	public void setDescriptionRaw(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.description_raw</code>.
	 */
	public String getDescriptionRaw() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.needed_answers</code>.
	 */
	public void setNeededAnswers(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.needed_answers</code>.
	 */
	public Integer getNeededAnswers() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.ratings_per_answer</code>.
	 */
	public void setRatingsPerAnswer(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.ratings_per_answer</code>.
	 */
	public Integer getRatingsPerAnswer() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.anwers_per_worker</code>.
	 */
	public void setAnwersPerWorker(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.anwers_per_worker</code>.
	 */
	public Integer getAnwersPerWorker() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.ratings_per_worker</code>.
	 */
	public void setRatingsPerWorker(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.ratings_per_worker</code>.
	 */
	public Integer getRatingsPerWorker() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.answer_type</code>.
	 */
	public void setAnswerType(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.answer_type</code>.
	 */
	public String getAnswerType() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.algorithm_task_chooser</code>.
	 */
	public void setAlgorithmTaskChooser(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.algorithm_task_chooser</code>.
	 */
	public String getAlgorithmTaskChooser() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.algorithm_quality_answer</code>.
	 */
	public void setAlgorithmQualityAnswer(String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.algorithm_quality_answer</code>.
	 */
	public String getAlgorithmQualityAnswer() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.algorithm_quality_rating</code>.
	 */
	public void setAlgorithmQualityRating(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.algorithm_quality_rating</code>.
	 */
	public String getAlgorithmQualityRating() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.base_payment</code>.
	 */
	public void setBasePayment(Integer value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.base_payment</code>.
	 */
	public Integer getBasePayment() {
		return (Integer) getValue(12);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.bonus_answer</code>.
	 */
	public void setBonusAnswer(Integer value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.bonus_answer</code>.
	 */
	public Integer getBonusAnswer() {
		return (Integer) getValue(13);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.bonus_rating</code>.
	 */
	public void setBonusRating(Integer value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.bonus_rating</code>.
	 */
	public Integer getBonusRating() {
		return (Integer) getValue(14);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.template_data</code>.
	 */
	public void setTemplateData(String value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.template_data</code>.
	 */
	public String getTemplateData() {
		return (String) getValue(15);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.template</code>.
	 */
	public void setTemplate(Integer value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.template</code>.
	 */
	public Integer getTemplate() {
		return (Integer) getValue(16);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.worker_quality_threshold</code>.
	 */
	public void setWorkerQualityThreshold(Integer value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.worker_quality_threshold</code>.
	 */
	public Integer getWorkerQualityThreshold() {
		return (Integer) getValue(17);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.payment_quality_threshold</code>.
	 */
	public void setPaymentQualityThreshold(Integer value) {
		setValue(18, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.payment_quality_threshold</code>.
	 */
	public Integer getPaymentQualityThreshold() {
		return (Integer) getValue(18);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record19 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row19<Integer, String, String, String, Integer, Integer, Integer, Integer, String, String, String, String, Integer, Integer, Integer, String, Integer, Integer, Integer> fieldsRow() {
		return (Row19) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row19<Integer, String, String, String, Integer, Integer, Integer, Integer, String, String, String, String, Integer, Integer, Integer, String, Integer, Integer, Integer> valuesRow() {
		return (Row19) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Experiment.EXPERIMENT.ID_EXPERIMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Experiment.EXPERIMENT.TITLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Experiment.EXPERIMENT.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Experiment.EXPERIMENT.DESCRIPTION_RAW;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Experiment.EXPERIMENT.NEEDED_ANSWERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Experiment.EXPERIMENT.RATINGS_PER_ANSWER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return Experiment.EXPERIMENT.ANWERS_PER_WORKER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return Experiment.EXPERIMENT.RATINGS_PER_WORKER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Experiment.EXPERIMENT.ANSWER_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return Experiment.EXPERIMENT.ALGORITHM_TASK_CHOOSER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return Experiment.EXPERIMENT.ALGORITHM_QUALITY_ANSWER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return Experiment.EXPERIMENT.ALGORITHM_QUALITY_RATING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field13() {
		return Experiment.EXPERIMENT.BASE_PAYMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field14() {
		return Experiment.EXPERIMENT.BONUS_ANSWER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field15() {
		return Experiment.EXPERIMENT.BONUS_RATING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field16() {
		return Experiment.EXPERIMENT.TEMPLATE_DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field17() {
		return Experiment.EXPERIMENT.TEMPLATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field18() {
		return Experiment.EXPERIMENT.WORKER_QUALITY_THRESHOLD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field19() {
		return Experiment.EXPERIMENT.PAYMENT_QUALITY_THRESHOLD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdExperiment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDescriptionRaw();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getNeededAnswers();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getRatingsPerAnswer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getAnwersPerWorker();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getRatingsPerWorker();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getAnswerType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getAlgorithmTaskChooser();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getAlgorithmQualityAnswer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getAlgorithmQualityRating();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value13() {
		return getBasePayment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value14() {
		return getBonusAnswer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value15() {
		return getBonusRating();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value16() {
		return getTemplateData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value17() {
		return getTemplate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value18() {
		return getWorkerQualityThreshold();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value19() {
		return getPaymentQualityThreshold();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value1(Integer value) {
		setIdExperiment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value2(String value) {
		setTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value3(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value4(String value) {
		setDescriptionRaw(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value5(Integer value) {
		setNeededAnswers(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value6(Integer value) {
		setRatingsPerAnswer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value7(Integer value) {
		setAnwersPerWorker(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value8(Integer value) {
		setRatingsPerWorker(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value9(String value) {
		setAnswerType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value10(String value) {
		setAlgorithmTaskChooser(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value11(String value) {
		setAlgorithmQualityAnswer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value12(String value) {
		setAlgorithmQualityRating(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value13(Integer value) {
		setBasePayment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value14(Integer value) {
		setBonusAnswer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value15(Integer value) {
		setBonusRating(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value16(String value) {
		setTemplateData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value17(Integer value) {
		setTemplate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value18(Integer value) {
		setWorkerQualityThreshold(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value19(Integer value) {
		setPaymentQualityThreshold(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord values(Integer value1, String value2, String value3, String value4, Integer value5, Integer value6, Integer value7, Integer value8, String value9, String value10, String value11, String value12, Integer value13, Integer value14, Integer value15, String value16, Integer value17, Integer value18, Integer value19) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		value16(value16);
		value17(value17);
		value18(value18);
		value19(value19);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ExperimentRecord
	 */
	public ExperimentRecord() {
		super(Experiment.EXPERIMENT);
	}

	/**
	 * Create a detached, initialised ExperimentRecord
	 */
	public ExperimentRecord(Integer idExperiment, String title, String description, String descriptionRaw, Integer neededAnswers, Integer ratingsPerAnswer, Integer anwersPerWorker, Integer ratingsPerWorker, String answerType, String algorithmTaskChooser, String algorithmQualityAnswer, String algorithmQualityRating, Integer basePayment, Integer bonusAnswer, Integer bonusRating, String templateData, Integer template, Integer workerQualityThreshold, Integer paymentQualityThreshold) {
		super(Experiment.EXPERIMENT);

		setValue(0, idExperiment);
		setValue(1, title);
		setValue(2, description);
		setValue(3, descriptionRaw);
		setValue(4, neededAnswers);
		setValue(5, ratingsPerAnswer);
		setValue(6, anwersPerWorker);
		setValue(7, ratingsPerWorker);
		setValue(8, answerType);
		setValue(9, algorithmTaskChooser);
		setValue(10, algorithmQualityAnswer);
		setValue(11, algorithmQualityRating);
		setValue(12, basePayment);
		setValue(13, bonusAnswer);
		setValue(14, bonusRating);
		setValue(15, templateData);
		setValue(16, template);
		setValue(17, workerQualityThreshold);
		setValue(18, paymentQualityThreshold);
	}
}
