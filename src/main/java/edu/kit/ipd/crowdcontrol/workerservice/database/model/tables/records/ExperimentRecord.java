/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperimentRecord extends org.jooq.impl.UpdatableRecordImpl<edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.ExperimentRecord> implements org.jooq.Record14<java.lang.Integer, java.lang.Object, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String> {

	private static final long serialVersionUID = 1291494906;

	/**
	 * Setter for <code>crowdcontrol.Experiment.idexperiment</code>.
	 */
	public void setIdexperiment(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.idexperiment</code>.
	 */
	public java.lang.Integer getIdexperiment() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.rating_options</code>.
	 */
	public void setRatingOptions(java.lang.Object value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.rating_options</code>.
	 */
	public java.lang.Object getRatingOptions() {
		return (java.lang.Object) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.titel</code>.
	 */
	public void setTitel(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.titel</code>.
	 */
	public java.lang.String getTitel() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.description</code>.
	 */
	public void setDescription(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.description</code>.
	 */
	public java.lang.String getDescription() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.ratings_per_answer</code>.
	 */
	public void setRatingsPerAnswer(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.ratings_per_answer</code>.
	 */
	public java.lang.Integer getRatingsPerAnswer() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.algorithm_task_chooser</code>.
	 */
	public void setAlgorithmTaskChooser(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.algorithm_task_chooser</code>.
	 */
	public java.lang.String getAlgorithmTaskChooser() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.algorithm_quality_answer</code>.
	 */
	public void setAlgorithmQualityAnswer(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.algorithm_quality_answer</code>.
	 */
	public java.lang.String getAlgorithmQualityAnswer() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.algorithm_quality_rating</code>.
	 */
	public void setAlgorithmQualityRating(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.algorithm_quality_rating</code>.
	 */
	public java.lang.String getAlgorithmQualityRating() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.base_payment</code>.
	 */
	public void setBasePayment(java.lang.Integer value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.base_payment</code>.
	 */
	public java.lang.Integer getBasePayment() {
		return (java.lang.Integer) getValue(8);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.bonus_answer</code>.
	 */
	public void setBonusAnswer(java.lang.Integer value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.bonus_answer</code>.
	 */
	public java.lang.Integer getBonusAnswer() {
		return (java.lang.Integer) getValue(9);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.bonus_rating</code>.
	 */
	public void setBonusRating(java.lang.Integer value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.bonus_rating</code>.
	 */
	public java.lang.Integer getBonusRating() {
		return (java.lang.Integer) getValue(10);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.template_data</code>.
	 */
	public void setTemplateData(java.lang.String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.template_data</code>.
	 */
	public java.lang.String getTemplateData() {
		return (java.lang.String) getValue(11);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.template</code>.
	 */
	public void setTemplate(java.lang.Integer value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.template</code>.
	 */
	public java.lang.Integer getTemplate() {
		return (java.lang.Integer) getValue(12);
	}

	/**
	 * Setter for <code>crowdcontrol.Experiment.answer_type</code>.
	 */
	public void setAnswerType(java.lang.String value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Experiment.answer_type</code>.
	 */
	public java.lang.String getAnswerType() {
		return (java.lang.String) getValue(13);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record14 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row14<java.lang.Integer, java.lang.Object, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String> fieldsRow() {
		return (org.jooq.Row14) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row14<java.lang.Integer, java.lang.Object, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String> valuesRow() {
		return (org.jooq.Row14) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.IDEXPERIMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Object> field2() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.RATING_OPTIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.TITEL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.RATINGS_PER_ANSWER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.ALGORITHM_TASK_CHOOSER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.ALGORITHM_QUALITY_ANSWER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.ALGORITHM_QUALITY_RATING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field9() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.BASE_PAYMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field10() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.BONUS_ANSWER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field11() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.BONUS_RATING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field12() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.TEMPLATE_DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field13() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.TEMPLATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field14() {
		return edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT.ANSWER_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getIdexperiment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Object value2() {
		return getRatingOptions();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getTitel();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getRatingsPerAnswer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getAlgorithmTaskChooser();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getAlgorithmQualityAnswer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return getAlgorithmQualityRating();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value9() {
		return getBasePayment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value10() {
		return getBonusAnswer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value11() {
		return getBonusRating();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value12() {
		return getTemplateData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value13() {
		return getTemplate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value14() {
		return getAnswerType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value1(java.lang.Integer value) {
		setIdexperiment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value2(java.lang.Object value) {
		setRatingOptions(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value3(java.lang.String value) {
		setTitel(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value4(java.lang.String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value5(java.lang.Integer value) {
		setRatingsPerAnswer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value6(java.lang.String value) {
		setAlgorithmTaskChooser(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value7(java.lang.String value) {
		setAlgorithmQualityAnswer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value8(java.lang.String value) {
		setAlgorithmQualityRating(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value9(java.lang.Integer value) {
		setBasePayment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value10(java.lang.Integer value) {
		setBonusAnswer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value11(java.lang.Integer value) {
		setBonusRating(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value12(java.lang.String value) {
		setTemplateData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value13(java.lang.Integer value) {
		setTemplate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord value14(java.lang.String value) {
		setAnswerType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExperimentRecord values(java.lang.Integer value1, java.lang.Object value2, java.lang.String value3, java.lang.String value4, java.lang.Integer value5, java.lang.String value6, java.lang.String value7, java.lang.String value8, java.lang.Integer value9, java.lang.Integer value10, java.lang.Integer value11, java.lang.String value12, java.lang.Integer value13, java.lang.String value14) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ExperimentRecord
	 */
	public ExperimentRecord() {
		super(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT);
	}

	/**
	 * Create a detached, initialised ExperimentRecord
	 */
	public ExperimentRecord(java.lang.Integer idexperiment, java.lang.Object ratingOptions, java.lang.String titel, java.lang.String description, java.lang.Integer ratingsPerAnswer, java.lang.String algorithmTaskChooser, java.lang.String algorithmQualityAnswer, java.lang.String algorithmQualityRating, java.lang.Integer basePayment, java.lang.Integer bonusAnswer, java.lang.Integer bonusRating, java.lang.String templateData, java.lang.Integer template, java.lang.String answerType) {
		super(edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Experiment.EXPERIMENT);

		setValue(0, idexperiment);
		setValue(1, ratingOptions);
		setValue(2, titel);
		setValue(3, description);
		setValue(4, ratingsPerAnswer);
		setValue(5, algorithmTaskChooser);
		setValue(6, algorithmQualityAnswer);
		setValue(7, algorithmQualityRating);
		setValue(8, basePayment);
		setValue(9, bonusAnswer);
		setValue(10, bonusRating);
		setValue(11, templateData);
		setValue(12, template);
		setValue(13, answerType);
	}
}
