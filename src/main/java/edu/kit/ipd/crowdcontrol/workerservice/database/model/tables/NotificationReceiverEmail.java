/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.objectservice.database.model.tables;


import edu.kit.ipd.crowdcontrol.objectservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.objectservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.objectservice.database.model.tables.records.NotificationReceiverEmailRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationReceiverEmail extends TableImpl<NotificationReceiverEmailRecord> {

	private static final long serialVersionUID = -613189891;

	/**
	 * The reference instance of <code>crowdcontrol.Notification_Receiver_Email</code>
	 */
	public static final NotificationReceiverEmail NOTIFICATION_RECEIVER_EMAIL = new NotificationReceiverEmail();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NotificationReceiverEmailRecord> getRecordType() {
		return NotificationReceiverEmailRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Notification_Receiver_Email.id_notification_receiver_email</code>.
	 */
	public final TableField<NotificationReceiverEmailRecord, Integer> ID_NOTIFICATION_RECEIVER_EMAIL = createField("id_notification_receiver_email", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Notification_Receiver_Email.notification</code>.
	 */
	public final TableField<NotificationReceiverEmailRecord, Integer> NOTIFICATION = createField("notification", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Notification_Receiver_Email.email</code>.
	 */
	public final TableField<NotificationReceiverEmailRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(191).nullable(false), this, "");

	/**
	 * Create a <code>crowdcontrol.Notification_Receiver_Email</code> table reference
	 */
	public NotificationReceiverEmail() {
		this("Notification_Receiver_Email", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Notification_Receiver_Email</code> table reference
	 */
	public NotificationReceiverEmail(String alias) {
		this(alias, NOTIFICATION_RECEIVER_EMAIL);
	}

	private NotificationReceiverEmail(String alias, Table<NotificationReceiverEmailRecord> aliased) {
		this(alias, aliased, null);
	}

	private NotificationReceiverEmail(String alias, Table<NotificationReceiverEmailRecord> aliased, Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<NotificationReceiverEmailRecord, Integer> getIdentity() {
		return Keys.IDENTITY_NOTIFICATION_RECEIVER_EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NotificationReceiverEmailRecord> getPrimaryKey() {
		return Keys.KEY_NOTIFICATION_RECEIVER_EMAIL_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NotificationReceiverEmailRecord>> getKeys() {
		return Arrays.<UniqueKey<NotificationReceiverEmailRecord>>asList(Keys.KEY_NOTIFICATION_RECEIVER_EMAIL_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<NotificationReceiverEmailRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<NotificationReceiverEmailRecord, ?>>asList(Keys.REFERENCED_NOTIFICATION);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NotificationReceiverEmail as(String alias) {
		return new NotificationReceiverEmail(alias, this);
	}

	/**
	 * Rename this table
	 */
	public NotificationReceiverEmail rename(String name) {
		return new NotificationReceiverEmail(name, null);
	}
}
