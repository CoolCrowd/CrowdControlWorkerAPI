/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables;

import edu.kit.ipd.crowdcontrol.workerservice.database.model.Crowdcontrol;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.Keys;
import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records.RatingRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rating extends org.jooq.impl.TableImpl<RatingRecord> {

	private static final long serialVersionUID = -1935160433;

	/**
	 * The singleton instance of <code>crowdcontrol.Rating</code>
	 */
	public static final Rating RATING = new Rating();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<RatingRecord> getRecordType() {
		return RatingRecord.class;
	}

	/**
	 * The column <code>crowdcontrol.Rating.idRating</code>.
	 */
	public final org.jooq.TableField<RatingRecord, java.lang.Integer> IDRATING = createField("idRating", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Rating.task</code>.
	 */
	public final org.jooq.TableField<RatingRecord, java.lang.Integer> TASK = createField("task", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Rating.answer_r</code>.
	 */
	public final org.jooq.TableField<RatingRecord, java.lang.Integer> ANSWER_R = createField("answer_r", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Rating.timestamp</code>.
	 */
	public final org.jooq.TableField<RatingRecord, java.sql.Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>crowdcontrol.Rating.rating</code>.
	 */
	public final org.jooq.TableField<RatingRecord, java.lang.Integer> RATING_ = createField("rating", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>crowdcontrol.Rating.worker_id</code>.
	 */
	public final org.jooq.TableField<RatingRecord, java.lang.Integer> WORKER_ID = createField("worker_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>crowdcontrol.Rating.quality</code>.
	 */
	public final org.jooq.TableField<RatingRecord, java.lang.Integer> QUALITY = createField("quality", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>crowdcontrol.Rating</code> table reference
	 */
	public Rating() {
		this("Rating", null);
	}

	/**
	 * Create an aliased <code>crowdcontrol.Rating</code> table reference
	 */
	public Rating(java.lang.String alias) {
		this(alias, Rating.RATING);
	}

	private Rating(java.lang.String alias, org.jooq.Table<RatingRecord> aliased) {
		this(alias, aliased, null);
	}

	private Rating(java.lang.String alias, org.jooq.Table<RatingRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Crowdcontrol.CROWDCONTROL, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<RatingRecord> getPrimaryKey() {
		return Keys.KEY_RATING_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<RatingRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<RatingRecord>>asList(Keys.KEY_RATING_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<RatingRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<RatingRecord, ?>>asList(Keys.IDHITRATING, Keys.IDANSWERSRATINS, Keys.WORKERRATED);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Rating as(java.lang.String alias) {
		return new Rating(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Rating rename(java.lang.String name) {
		return new Rating(name, null);
	}
}
