/**
 * This class is generated by jOOQ
 */
package edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.records;

import edu.kit.ipd.crowdcontrol.workerservice.database.model.tables.Task;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends org.jooq.impl.UpdatableRecordImpl<TaskRecord> implements org.jooq.Record6<java.lang.Integer, java.lang.Integer, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.Boolean> {

	private static final long serialVersionUID = 652412083;

	/**
	 * Setter for <code>crowdcontrol.Task.idTask</code>.
	 */
	public void setIdtask(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Task.idTask</code>.
	 */
	public java.lang.Integer getIdtask() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>crowdcontrol.Task.experiment</code>.
	 */
	public void setExperiment(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Task.experiment</code>.
	 */
	public java.lang.Integer getExperiment() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>crowdcontrol.Task.running</code>.
	 */
	public void setRunning(java.lang.Boolean value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Task.running</code>.
	 */
	public java.lang.Boolean getRunning() {
		return (java.lang.Boolean) getValue(2);
	}

	/**
	 * Setter for <code>crowdcontrol.Task.platform_data</code>.
	 */
	public void setPlatformData(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Task.platform_data</code>.
	 */
	public java.lang.String getPlatformData() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>crowdcontrol.Task.crowd_platform</code>.
	 */
	public void setCrowdPlatform(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Task.crowd_platform</code>.
	 */
	public java.lang.String getCrowdPlatform() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>crowdcontrol.Task.stopping</code>.
	 */
	public void setStopping(java.lang.Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>crowdcontrol.Task.stopping</code>.
	 */
	public java.lang.Boolean getStopping() {
		return (java.lang.Boolean) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Integer, java.lang.Integer, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.Boolean> fieldsRow() {
		return (org.jooq.Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Integer, java.lang.Integer, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.Boolean> valuesRow() {
		return (org.jooq.Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return Task.TASK.IDTASK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return Task.TASK.EXPERIMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field3() {
		return Task.TASK.RUNNING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return Task.TASK.PLATFORM_DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return Task.TASK.CROWD_PLATFORM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field6() {
		return Task.TASK.STOPPING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getIdtask();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getExperiment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value3() {
		return getRunning();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getPlatformData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getCrowdPlatform();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value6() {
		return getStopping();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskRecord value1(java.lang.Integer value) {
		setIdtask(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskRecord value2(java.lang.Integer value) {
		setExperiment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskRecord value3(java.lang.Boolean value) {
		setRunning(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskRecord value4(java.lang.String value) {
		setPlatformData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskRecord value5(java.lang.String value) {
		setCrowdPlatform(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskRecord value6(java.lang.Boolean value) {
		setStopping(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TaskRecord values(java.lang.Integer value1, java.lang.Integer value2, java.lang.Boolean value3, java.lang.String value4, java.lang.String value5, java.lang.Boolean value6) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TaskRecord
	 */
	public TaskRecord() {
		super(Task.TASK);
	}

	/**
	 * Create a detached, initialised TaskRecord
	 */
	public TaskRecord(java.lang.Integer idtask, java.lang.Integer experiment, java.lang.Boolean running, java.lang.String platformData, java.lang.String crowdPlatform, java.lang.Boolean stopping) {
		super(Task.TASK);

		setValue(0, idtask);
		setValue(1, experiment);
		setValue(2, running);
		setValue(3, platformData);
		setValue(4, crowdPlatform);
		setValue(5, stopping);
	}
}
